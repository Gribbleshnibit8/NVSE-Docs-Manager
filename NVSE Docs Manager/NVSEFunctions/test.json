[{"Parameters":[],"ReturnType":[{"type":"int:Version"}],"Description":["Returns the installed version of NVSE."],"Name":"GetNVSEVersion","Alias":"","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Version"]},{"Parameters":[],"ReturnType":[{"type":"int:BetaVersion"}],"Description":["Returns the beta number of the installed version of NVSE. A non-beta version of NVSE will return 0."],"Name":"GetNVSEBeta","Alias":"","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Version"]},{"Parameters":[],"ReturnType":[{"type":"int:Revision"}],"Description":["Returns the numbered revision of the installed version of NVSE."],"Name":"GetNVSERevision","Alias":"","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Version"]},{"Parameters":[{"type":"float:Vector_x"},{"type":"float:Vector_y"},{"type":"float:Vector_z"}],"ReturnType":[{"type":"float:Length"}],"Description":["Returns length of a vector3."],"Name":"V3Length","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:Vector_x"},{"type":"float:Vector_y"},{"type":"float:Vector_z"}],"Description":["Returns normalized vector3."],"Name":"V3Normalize","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:VectorA_x"},{"type":"float:VectorA_y"},{"type":"float:VectorA_z"},{"type":"float:VectorB_x"},{"type":"float:VectorB_y"},{"type":"float:VectorB_z"}],"Description":["Returns crossproduct of two vector3s."],"Name":"V3Crossproduct","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_w"},{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:Elevation"},{"type":"float:Bank"},{"type":"float:Heading"},{"type":"bool:Flag","optional":"true"}],"Description":["Converts euler angles to quaternion (two euler rotation sequences are available, because actors use different sequence than other objects. the default is XYZ, and optionally ZX for actors)."],"Name":"QFromEuler","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_w"},{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:Axis_x"},{"type":"float:Axis_y"},{"type":"float:Axis_z"},{"type":"float:Angle"}],"Description":["Converts rotation axis and angle to quaternion."],"Name":"QFromAxisAngle","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_w"},{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:Quat_w"},{"type":"float:Quat_x"},{"type":"float:Quat_y"},{"type":"float:Quat_z"}],"Description":["Converts rotation axis and angle to quaternion."],"Name":"QNormalize","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_w"},{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:QuatA_w"},{"type":"float:QuatA_x"},{"type":"float:QuatA_y"},{"type":"float:QuatA_z"},{"type":"float:QuatB_w"},{"type":"float:QuatB_x"},{"type":"float:QuatB_Y"},{"type":"float:QuatB_z"}],"Description":["Multiplies two quaternions (Grossmann product). The result is the second quaternion rotated by the first."],"Name":"QMultQuat","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:Quat_w"},{"type":"float:Quat_x"},{"type":"float:Quat_y"},{"type":"float:Quat_z"},{"type":"float:Vector_x"},{"type":"float:Vector_Y"},{"type":"float:Vector_z"}],"Description":["Multiplies a vector3 with a quaternion. The result is the vector rotated by the quaternion."],"Name":"QMultVector3","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Out_w"},{"type":"string:Out_x"},{"type":"string:Out_y"},{"type":"string:Out_z"},{"type":"float:QuatA_w"},{"type":"float:QuatA_x"},{"type":"float:QuatA_y"},{"type":"float:QuatA_z"},{"type":"float:QuatB_w"},{"type":"float:QuatB_x"},{"type":"float:QuatB_y"},{"type":"float:QuatB_z"},{"type":"float:Ratio"},{"type":"bool:Flag"}],"Description":["Interpolates between two given quaternions (two methods are available: the default is normalized linear interpolation, and optionally spherical linear interpolation)."],"Name":"QInterpolate","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:Elevation"},{"type":"string:Bank"},{"type":"string:Heading"},{"type":"float:Quat_w"},{"type":"float:Quat_x"},{"type":"float:Quat_y"},{"type":"float:Quat_z"},{"type":"bool:Flag","optional":"true"}],"Description":["Converts a given quaternion to euler angles (again, two different euler rotation sequences available). The quaternion does not need to be normalized."],"Name":"QToEuler","Alias":"","Version":"4.3","Convention":"B","Tags":["algohol"]},{"Parameters":[{"type":"string:ArrayType"}],"ReturnType":[{"type":"array_var"}],"Description":["Creates a new array_var and assigns it to an array variable. Must be called within the context of an OBSE expression such as Let. The parameter specifies the type of array to create: StringMap, Map, or Array. See the above section for more information on the different types of array variables."],"Name":"ar_Construct","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var"}],"ReturnType":[{"type":"int:Size"}],"Description":["Returns the number of elements in an array, or -1 if the array is not initialized. For Array-type variables the highest key in the array is equal to one less than the array's size. Must be called within the context of an NVSE expression. The array can be an array variable or an array element which contains an array."],"Name":"ar_Size","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var"}],"Description":["For debugging purposes, prints the key and value of every element in an array to the console. Must be called within an NVSE expression."],"Name":"ar_Dump","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"int:ArrayID"}],"Description":["Does the same as ar_Dump but accepts an array ID instead of an array_var. Provided as a convenience for debugging in the console."],"Name":"ar_DumpID","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Target"},{"type":"int:ArrayIndexOrRange","optional":"true"}],"ReturnType":[{"type":"int:NumRemoved"}],"Description":["Erases elements from an array. You may provide a single element, in which case only that element will be erased and only if it is present. Or, you may provide a range in slice notation. Any elements greater than or equal to the lower bound and less than or equal to the upper bound of the range will be erased. If the array is of type Array, elements above the erased elements will be shifted down. Returns the number of elements removed. May omit the second argument; doing so will erase all elements of the array."],"Examples":[{"Example":["array_var arr","let arr := ar_Construct StringMap","let arr[\"another array\"] := ar_Construct Array","ar_Erase arr[\"another array\"] 0  ; erase element 0 if it exists, higher elements will be shifted down by 1","ar_Erase arr \"begin\":\"end\"  ; erase any elements having keys >= \"begin\" and <= \"end\""]}],"Name":"ar_Erase","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:ToSort"},{"type":"bool:SortDescending","optional":"true"}],"ReturnType":[{"type":"array_var:SortedArray"}],"Description":["Attempts to sort the elements of an array in ascending or descending order and returns a new Array containing the elements in sorted order (keys associated with the elements are lost). In order to be sorted all elements of an array must be of the same type (strings, numbers, or objects). If this condition is not met an empty Array is returned. Strings are sorted alphabetically and case-insensitively, numbers are sorted numerically, and objects are sorted by formID. By default the elements are sorted in ascending order."],"Name":"ar_Sort","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:ToSort"},{"type":"ref:ComparisonFunction"},{"type":"bool:Reverse","optional":"true"}],"ReturnType":[{"type":"array_var:Sorted"}],"Description":["Returns an Array sorted by calling the provided function script to perform comparison of elements. The function should be defined to take two array_var arguments. When it is called, the arguments will contain exactly one element each - the elements to be compared. It should return true if the first argument is less than the second argument, and true if it is greater than or equal to the second argument. You can define 'less', 'greater', and 'equal' in whatever way makes sense for you provided your definitions provide a definitive ordering of any set of values; otherwise the sort may never terminate. The optional third argument sorts the elements in reverse order. ","Usable only with Array-type arrays."],"Name":"ar_CustomSort","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:ToSort"},{"type":"bool:SortDescending","optional":"true"}],"ReturnType":[{"type":"array_var:SortedArray"}],"Description":["Sorts the elements of an array alphabetically in ascending or descending order and returns a new Array containing the elements in sorted order. Ordering is case-insensitive. Unlike ar_Sort, does not require elements to be of the same type - numeric elements are converted to a string representation, and forms are sorted by their names (if named) or the string representation of their formIDs. Omitting the optional parameter causes elements to be sorted in ascending order."],"Name":"ar_SortAlpha","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"stringOrNumberOrForm:Value"},{"type":"array_var:ArrayToSearch"},{"type":"range:InRange","optional":"true"}],"ReturnType":[{"type":"StringOrNumber:Key"}],"Description":["Locates the first occurrence of the specified value within an array and returns the key associated with it. A range may optionally be specified using range notation, i.e. let key := ar_Find \"tofind\" arrayVar lowerBound:upperBound. If the value is not found, the function returns an empty string (for string-indexed arrays) or the value -99999.0 (for numeric-index arrays)."],"Name":"ar_Find","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"}],"ReturnType":[{"type":"arrayKey:Key"}],"Description":["Returns the key of the first element in an array."],"Name":"ar_First","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"}],"ReturnType":[{"type":"arrayKey:Key"}],"Description":["Returns the key of the last element in an array."],"Name":"ar_Last","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"},{"type":"arrayKey:PrecedingKey"}],"ReturnType":[{"type":"arrayKey:Key"}],"Description":["Returns the key of the element immediately following the specified key."],"Name":"ar_Next","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"},{"type":"arrayKey:PrevKey"}],"ReturnType":[{"type":"arrayKey:Key"}],"Description":["Returns the key of the element immediately preceding the specified key."],"Name":"ar_Prev","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"}],"ReturnType":[{"type":"array_var:Keys"}],"Description":["Returns an Array containing the keys of the specified array."],"Name":"ar_Keys","Alias":"","Version":"4.1","Convention":"B","Tags":["Input","String"]},{"Parameters":[{"type":"array_var:Source"},{"type":"arrayKey:Key"}],"ReturnType":[{"type":"bool:HasKey"}],"Description":["Returns 1 if the array contains an element with the specified key."],"Name":"ar_HasKey","Alias":"","Version":"4.1","Convention":"B","Tags":["Input","String"]},{"Parameters":[],"ReturnType":[{"type":"string:BadKey"}],"Description":["Returns a constant representing an invalid string array index. Compare to the return value of commands returning an array key to determine if a valid key was returned."],"Name":"ar_BadStringIndex","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[],"ReturnType":[{"type":"Integer:BadKey"}],"Description":["Returns a constant representing an invalid numeric array index. Compare to the return value of commands returning an array key to determine if a valid key was returned."],"Name":"ar_BadNumericIndex","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Source"}],"ReturnType":[{"type":"array_var:Copy"}],"Description":["Creates a copy of the keys and elements of the specified array. The resulting array is identical to the source array. If the source array contains other arrays, the copy will contain <strong>references</strong> to those same arrays."],"Name":"ar_Copy","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var"}],"ReturnType":[{"type":"array_var:Copy"}],"Description":["Performs the same function as ar_Copy, except any arrays contained within the source array are <strong>also</strong> copied (and any arrays within those arrays are copied as well, and so on)."],"Name":"ar_DeepCopy","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[],"ReturnType":[{"type":"array_var:NullArray"}],"Description":["Returns an invalid array. This is useful if you wish to specify that a variable which previously referred to an array should no longer refer to any array."],"Name":"ar_Null","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Array"},{"type":"Integer:NewSize"},{"type":"multi:PaddingValue","optional":"true"}],"ReturnType":[{"type":"bool:Resized"}],"Description":["Resizes an Array-type array to be of the specified size. If the new size is smaller than the current size, elements at the end of the array are discarded. If the new size is larger, additional elements are appended to the array. By default these elements have the numeric value zero, but an optional argument can be used to specify the value with which to pad the array. Returns 1 if successful, 0 otherwise.","Usable only with Array-type arrays."],"Name":"ar_Resize","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Array"},{"type":"Integer:Index"},{"type":"multi:ValueToInsert"}],"ReturnType":[{"type":"bool:Inserted"}],"Description":["Inserts a single element into an Array-type array at the specified index provided the index is not greater than the current size of the array. Elements above the index are shifted up by one index.","Usable only with Array-type arrays."],"Name":"ar_Insert","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Array"},{"type":"Integer:Index"},{"type":"array_var:RangeToInsert"}],"ReturnType":[{"type":"bool:Resized"}],"Description":["Inserts a range of elements into an Array-type array at the specified index provided the index is not greater than the current size of the array. The range is passed as an Array. Each element of the range is inserted into the target Array in order. Elements above the insertion index are shifted up by the number of elements inserted.","Usable only with Array-type arrays."],"Name":"ar_InsertRange","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"array_var:Array"},{"type":"multi:ToInsert"}],"Description":["Appends an element to an Array.","Usable only with Array-type arrays."],"Name":"ar_Append","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"},{"type":"multi:Element","optional":"true"}],"ReturnType":[{"type":"array_var:List"}],"Description":["Takes up to twenty arguments of any type and returns an Array containing those elements in the order in which they were passed. We recommend separating the values with commas (starting after the first argument)."],"Name":"ar_List","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"key-value pair"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"},{"type":"key-value pair","optional":"true"}],"ReturnType":[{"type":"Map/StringMap"}],"Description":["Creates a Map or Stringmap given a list of 0-20 key-value pairs. Pairs are specified as 'key::value', where 'key' is a string or numeric value and 'value' is a string, number, array, or form.","Usable only with Array-type arrays."],"Name":"ar_Map","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"type":"Integer:Start"},{"type":"Integer:End"},{"type":"Integer:Step","optional":"true"}],"ReturnType":[{"type":"array_var:Range"}],"Description":["Returns an Array of zero or more numbers ranging from <em>start</em> up to and including <em>end</em> spaced in intervals of <em>step</em>.","For example, <code>ar_Range (5,10,2)</code> returns <code>(5,7,9)</code> and <code>ar_Range (5,3,-1)</code> returns <code>(5,4,3)</code>. This is useful for performing a traditional for loop within a foreach expression. The optional step argument defaults to 1.","Usable only with Array-type arrays."],"Name":"ar_Range","Alias":"","Version":"4.1","Convention":"B","Tags":["Array"]},{"Parameters":[{"url":"Format_Specifiers","type":"format string:String"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"}],"Description":["Prints a formatted message to the console using the extended format specifiers."],"Name":"PrintToConsole","Alias":"printc","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"url":"Format_Specifiers","type":"format string:String"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"}],"Description":["Prints a formatted string to the console if debug mode is enabled for calling script."],"Name":"DebugPrint","Alias":"dbprintc","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"bEnableDebugMessages:Integer"},{"type":"modIndex:Integer","optional":"true"}],"Description":["Toggles debug mode for all scripts belonging to a mod. When called in the console, the mod index of the mod for which debug messages are to be toggled can be specified by the second parameter (in decimal, not hexadecimal, format)."],"Name":"SetDebugMode","Alias":"dbmode","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"modIndex:Integer","optional":"true"}],"ReturnType":[{"type":"debugEnabled:bool"}],"Description":["Returns whether debug mode is set for the mod."],"Name":"GetDebugMode","Alias":"GetDbMode","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"bool:EchoState","optional":"true"}],"ReturnType":[{"type":"bool:PreviousEchoState"}],"Description":["Toggles whether the engine echoes to the console and return the previous state"],"Name":"SetConsoleEcho","Alias":"","Version":"4.2","Convention":"B","Tags":[]},{"Parameters":[{"type":"int","optional":"true"}],"ReturnType":[{"type":"bool:EchoState"}],"Description":["Returns whether the engine echoes to the console."],"Name":"GetConsoleEcho","Alias":"","Version":"4.2","Convention":"B","Tags":[]},{"Parameters":[],"Description":["Closes all open menus."],"Name":"con_CloseAllMenus","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"settingName:String"}],"Description":["Setting string is of the same format as that used by con_SetINISetting. Does not return a value but merely prints the value to the console."],"Name":"con_GetINISetting","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"filename:String"},{"type":"Integer (Optional):Integer","optional":"true"}],"Description":["Loads the savegame with the specified filename if it exists."],"Name":"con_LoadGame","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Exit game without going through menus."],"Name":"con_QuitGame","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Refresh INI settings from files."],"Name":"con_RefreshINI","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"saveName:String"},{"type":"Integer (Optional):Integer","optional":"true"}],"Description":["Saves the current game with the specified filename. If the second parameter is non-zero, generates a text file containing information about the saved data."],"Name":"con_Save","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Writes all the .ini files."],"Name":"con_SaveINI","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Toggles clipping."],"Name":"con_TCL","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Toggles free camera."],"Name":"con_TFC","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Toggles menus on and off for screenshots."],"Name":"con_ToggleMenus","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Change the camera's field of view (in deg): default 75"],"Name":"con_SetCameraFOV","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"settingName:String"},{"type":"newValue:String"}],"Description":["Sets a game setting. Does not accept variables as arguments."],"Name":"con_SetGameSetting","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"setting:String"},{"type":"newValue:String"}],"Description":["Setting string is of the format \"SettingName:CategoryName\" where CategoryName is the header under which the setting appears in the .ini file. Does not accept variables as arguments."],"Name":"con_SetINISetting","Alias":"","Version":"1.1","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"axis:Axis"},{"type":"float:Float"}],"Description":["Sets Velocity on a reference."],"Name":"con_SetVel","Alias":"","Version":"1.1","Convention":"R","Tags":["Console"]},{"Parameters":[{"type":"Float:Float"}],"Description":["Set speed mult for UFO cam."],"Name":"con_SetUFOCamSpeedMult","Alias":"","Version":"2.5","Convention":"B","Tags":["Console"]},{"Parameters":[],"Description":["Show debug numbers on the screen."],"Name":"con_TDT","Alias":"","Version":"2.5","Convention":"B","Tags":["Console"]},{"Parameters":[{"type":"string:FileName"}],"Description":["SetConsoleOuputFile creates a text file in the Fallout NV directory that stores console input and output."],"Name":"con_SCOF","Alias":"","Version":"4.2","Convention":"","Tags":["Console"]},{"Parameters":[{"type":"ref:QuestID"}],"Description":["Shows the specified quest's variables in the console window. Requires ConsoleEcho turned on."],"Name":"con_SQV","Alias":"","Version":"4.2","Convention":"","Tags":["Console"]},{"Parameters":[{"type":"ref:QuestID"}],"Description":["Prints the name and value of all variables in the script attached to the specified object. Requires Console Echo to be toggled on. This function is useful for creating Debug Dumps with Con_SCOF."],"Name":"con_ShowVars","Alias":"","Version":"4.5","Convention":"","Tags":["Console"]},{"Parameters":[{"type":"baseForm:Actor","optional":"true"}],"ReturnType":[{"type":"IntegerOrFloat"}],"Description":["Returns the number of factions to which an actor base form belongs."],"Name":"GetBaseNumFactions","Alias":"","Version":"4.5 b7","Convention":"E","Tags":[]},{"Parameters":[{"type":"settingName:String","optional":"true"}],"ReturnType":[{"type":"baseForm:Faction"}],"Description":["Returns the Nth faction to which an actor base form belongs."],"Name":"GetBaseNthFaction","Alias":"","Version":"4.5 b7","Convention":"E","Tags":[]},{"Parameters":[{"type":"baseForm:Actor","optional":"true"}],"ReturnType":[{"type":"IntegerOrFloat"}],"Description":["Returns the Nth faction rank to which an actor base form belongs."],"Name":"GetBaseNthRank","Alias":"","Version":"4.5 b7","Convention":"E","Tags":[]},{"Parameters":[{"type":"baseForm:Faction"}],"ReturnType":[{"type":"IntegerOrFloat"}],"Description":["Returns the number of rank of a faction."],"Name":"GetNumRanks","Alias":"","Version":"4.5 b7","Convention":"E","Tags":[]},{"Parameters":[{"type":"settingName:String"}],"ReturnType":[{"type":"IntegerOrFloat"}],"Description":["Returns the value of a numeric game setting."],"Name":"GetNumericGameSetting","Alias":"","Version":"1.1","Convention":"","Tags":[]},{"Parameters":[{"type":"settingName:String"},{"type":"float:Float"}],"Description":["Sets a numeric game setting. Accepts variables as arguments."],"Name":"SetNumericGameSetting","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"settingName:String"}],"ReturnType":[{"type":"IntegerOrFloat"}],"Description":["Returns the value of a numeric setting. Setting name is of the format \"SettingName:CategoryName\" where CategoryName is the header under which the setting appears in the .ini file."],"Name":"GetNumericIniSetting","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"settingName:String"},{"type":"newValue:Float"}],"Description":["Sets a numeric ini setting, using the same format for the setting name as GetNumericIniSetting. Accepts variables as arguments."],"Name":"SetNumericIniSetting","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"ref:AnyForm"}],"Description":["Returns the reference under the crosshair - i.e., the reference that would be activated if the player pressed the Activate button. Will return non-activatable items (like tables and trees) as long as they are within activation distance. Otherwise Returns zero."],"Name":"GetCrosshairRef","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"gameLoaded:Bool"}],"Description":["Returns 1 after a game is loaded on a per-script basis. For each script that calls GetGameLoaded, the command will return true exactly once each time the game is loaded and false thereafter."],"Name":"GetGameLoaded","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"gameRestarted:Bool"}],"Description":["Returns 1 when the game is restarted on a per-script basis. For each script that calls GetGameRestarted, the commands Returns true exactly once per game session. Useful for situations in which a script must set certain object properties or settings each time the game is started."],"Name":"GetGameRestarted","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[{"type":"modName:String"}],"ReturnType":[{"type":"isLoaded:Bool"}],"Description":["Returns the whether the specified mod is loaded."],"Examples":[{"Example":["if IsModLoaded \"ExampleMod.esp\" == 1","\t; do things if mod is loaded","endif"]}],"Name":"IsModLoaded","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[{"type":"modName:String"}],"ReturnType":[{"type":"index:Integer"}],"Description":["Returns the index, in decimal form, of the specified mod."],"Examples":[{"Example":["int iIndex","\tset iIndex to GetModIndex \"ExampleMod.esp\""]}],"Name":"GetModIndex","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"loadedModsCount:Integer"}],"Description":["Returns the number of loaded mods."],"Name":"GetNumLoadedMods","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[{"type":"target item:Object","optional":"true"}],"ReturnType":[{"type":"index:Integer"}],"Description":["Returns the index of the mod associated with the form."],"Name":"GetSourceModIndex","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[{"type":"target item:Object","optional":"true"}],"ReturnType":[{"type":"index:Integer"}],"Description":["Returns the index of the ref."],"Name":"GetLocalRefIndex","Alias":"","Version":"2.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"mod Index:Integer"},{"type":"item ID:Integer"}],"ReturnType":[{"type":"builtForm:Reference"}],"Description":["Takes a mod index as an integer set by GetModIndex and the decimal converted formID of an object. Returns a reference to that object (object can be BaseForm or Reference)"],"Examples":[{"Example":["int iIndex","ref rObject","set rObject to BuildRef iIndex N\t; where N is the decimal version of a FormID"]}],"Name":"BuildRef","Alias":"","Version":"2.1","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"selection:Reference"}],"Description":["Returns the reference to the item last selected in the console."],"Name":"GetDebugSelection","Alias":"","Version":"1.2","Convention":"B","Tags":[]},{"Parameters":[{"url":"FormatSpecifiers","type":"format string:String"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"}],"Description":["Prints a formatted message to the top-left corner of the screen."],"Name":"MessageEx","Alias":"","Version":"2.1","Convention":"B","Tags":[]},{"Parameters":[{"url":"FormatSpecifiers","type":"format string:String"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"}],"Description":["Displays a formatted MessageBox using the extended format specifiers. Format specifiers may appear within buttons. Button text should be included within the format string, separated by the pipe character |."],"Name":"MessageBoxEx","Alias":"","Version":"2.1","Convention":"B","Tags":[]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"},{"type":"filter:Integer","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Return if a dx scancode is down or up. The optional integer is a bitfield, so the following values can be added together:","1 = Return game state (buttons as seen by the game after all filtering, previous default behavior)","2 = Return raw state (unfiltered buttons, exactly what is being pressed)","4 = Return inserted state (scripted keypresses only) if multiple of the above are selected, then they are logically or'd together","8 = Ignore disabled keys (Returns 0 for all DisableKey'd keys)"],"Name":"IsKeyPressed","Alias":"","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Fakes a key press for one frame."],"Name":"TapKey","Alias":"tk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Fakes a key press indefinately with the specified dx scancode."],"Name":"HoldKey","Alias":"hk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Releases a key held down by HoldKey."],"Name":"ReleaseKey","Alias":"rk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Prevents a player from using a key."],"Name":"DisableKey","Alias":"dk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Reenables a key previously disabled with DisableKey."],"Name":"EnableKey","Alias":"ek","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[],"ReturnType":[{"type":"count:Integer"}],"Description":["Returns how many keyboard keys are currently being held down."],"Name":"GetNumKeysPressed","Alias":"gnkp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"index:Integer"}],"ReturnType":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Returns the scancode of the nth key which is currently being held down."],"Name":"GetKeyPress","Alias":"gkp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[],"ReturnType":[{"type":"count:Integer"}],"Description":["Returns how many mouse buttons are currently being held down."],"Name":"GetNumMouseButtonsPressed","Alias":"gnmbp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"index:Integer"}],"ReturnType":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Returns the code of the nth mouse button which is currently being held down."],"Name":"GetMouseButtonPress","Alias":"gmbp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"}],"ReturnType":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Returns the key assigned to a control."],"Name":"GetControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"}],"ReturnType":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Returns the mouse button assigned to a control."],"Name":"GetAltControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Fakes a key press for one frame in menu mode."],"Name":"MenuTapKey","Alias":"mtk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Fakes a key press indefinately in menu mode."],"Name":"MenuHoldKey","Alias":"mhk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Releases a key held down by MenuHoldKey."],"Name":"MenuReleaseKey","Alias":"mrk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Disables the key and button bound to a control."],"Name":"DisableControl","Alias":"dc","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Enables the key and button assigned to a control."],"Name":"EnableControl","Alias":"ec","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"}],"Description":["Taps the key or mouse button assigned to control."],"Name":"TapControl","Alias":"tc","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"},{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Assigns a new keycode to the specified keyboard control. Changes are saved to the .ini when the user exits the game."],"Name":"SetControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"},{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"Description":["Assigns a new mouse button code to the specified mouse control. Changes are saved to the ini when the user exits the game."],"Name":"SetAltControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"},{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"ReturnType":[{"type":"Bool"}],"Description":["Flags a key or mouse button as a control, allowing modders to define custom controls - other scripts can then use IsControl to detect conflicts in which two mods try to use the same key for different actions."],"Name":"SetIsControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"ReturnType":[{"type":"isControl:Integer"}],"Description":["Returns 1 if the specified key or mouse button is assigned to a game control, 2 if it has been registered as a custom control by a mod via SetIsControl, or 0 otherwise."],"Name":"IsControl","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"scanCode:Integer"}],"ReturnType":[{"type":"isDisabled:Bool"}],"Description":["Returns 1 if the key has been disabled using DisableKey."],"Name":"IsKeyDisabled","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"}],"ReturnType":[{"type":"isDisabled:Bool"}],"Description":["Returns 1 if thecontrol has been disabled by a call to DisableControl.","Note that this only keeps track of calls to DisableControl and EnableControl; it does not check if the disabled state of the key or mouse button has been affected by DisableKey."],"Name":"IsControlDisabled","Alias":"","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Control_Codes","type":"controlCode:Integer"}],"ReturnType":[{"type":"isPressed:Bool"}],"Description":["Returns 1 if either the key or mouse button assigned to the specified control code is currently pressed. Detects disabled keys."],"Name":"IsControlPressed","Alias":"","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"weight:Float"}],"Description":["Returns the weight of the sepcified base form."],"Name":"GetWeight","Alias":"","Version":"1.1","Condition":"Yes","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"target ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:health"}],"Description":["Returns the base health of the object or calling reference."],"Name":"GetHealth","Alias":"GetBaseHealth","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:value"}],"Description":["Returns the base value of the object or calling reference."],"Name":"GetValue","Alias":"GetItemValue","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"float:Weight"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weight of the object."],"Name":"SetWeight","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"int:newHealth"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the base health of the specified base form."],"Name":"SetHealth","Alias":"SetObjectHealth","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID"},{"type":"int:NewValue"}],"Description":["Sets the monetary value of a base object."],"Name":"SetBaseItemValue","Alias":"SetValue","Version":"1.1","Convention":"B","Tags":["Inventory"]},{"Parameters":[{"type":"target ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Form_Type_IDs","type":"int:FormType"}],"Description":["Returns the type of the specified base form."],"Name":"GetType","Alias":"GetObjectType","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"formList:RepairList"}],"Description":["Returns the repair list for the inventory object."],"Name":"GetRepairList","Alias":"grl","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Equip_Type","type":"int:ItemType"}],"Description":["Returns the equipment type of the inventory object."],"Name":"GetEquipType","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"target ref:ObjectID"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:Comparison"}],"Description":["Compares the names of two objects and Returns -1 if the first occurs alphabetically before the second, 1 if the first occurs after the second, or 0 for equality. Comparison is case-insensitive."],"Name":"CompareNames","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory","String"]},{"Parameters":[{"type":"string:Name"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the name of the object."],"Name":"SetName","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[],"ReturnType":[{"type":"float:Health"}],"Description":["Returns the current health of the calling ref."],"Name":"GetCurrentHealth","Alias":"","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"float:NewHealth"}],"Description":["Sets the current health of the calling reference."],"Name":"SetCurrentHealth","Alias":"","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"form list:FormList"},{"type":"target ref:ObjectID","optional":"true"}],"Description":["Sets the repair list for the specified item."],"Name":"SetRepairList","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"bool:IsQuestItem"}],"Description":["Returns 1 if the object or calling reference is a quest item."],"Name":"IsQuestItem","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"bool:SetQuestItem"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets whether the specified object or object reference is a quest item."],"Name":"SetQuestItem","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:ObjectEffect"}],"Description":["Returns the object effect of the inventory object."],"Name":"GetObjectEffect","Alias":"GetEnchantment","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"int:WhichHotkey"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the item assigned to the specified hotkey from 1 to 8."],"Name":"GetHotkeyItem","Alias":"","Version":"1.1","Convention":"","Tags":["Inventory"]},{"Parameters":[{"type":"int:WhichHotkey"},{"type":"ref:ObjectID"}],"Description":["Sets the item associated with a hotkey."],"Name":"SetHotkeyItem","Alias":"","Version":"4.5","Convention":"","Tags":["Inventory"]},{"Parameters":[{"type":"int:WhichHotkey"}],"Description":["Clears the item associated with the specified hotkey."],"Name":"ClearHotKey","Alias":"","Version":"4.5","Convention":"","Tags":["Inventory"]},{"Parameters":[{"url":"Equipment_Slot_IDs","type":"int:AtIndex"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the base object of the item in the specified slot."],"Name":"GetEquippedObject","Alias":"GetEqObj","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"url":"Equipment_Slot_IDs","type":"int:EquipmentSlot"}],"ReturnType":[{"type":"float:Health"}],"Description":["Returns the current health of the object equipped in the specified slot."],"Name":"GetEquippedCurrentHealth","Alias":"GetEqCurHealth","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"value:Float"},{"url":"Equipment_Slot_IDs","type":"int:Slot"}],"Description":["Sets the current health of the equipped object at the given slot."],"Name":"SetEquippedCurrentHealth","Alias":"SetEqCurHealth","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[],"ReturnType":[{"type":"int:Count"}],"Description":["Returns the number of items contained by the calling ref."],"Name":"GetNumItems","Alias":"GetNumObjects","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"int:Index"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the base object of the specified index contained in the calling ref."],"Name":"GetInventoryObject","Alias":"GetNthObject","Version":"1.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Returns the ammo of a weapon."],"Name":"GetWeaponAmmo","Alias":"GetAmmo","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the clip size for the weapon."],"Name":"GetWeaponClipRounds","Alias":"GetClipSize","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:Damage"}],"Description":["Returns the attack damage for the weapon."],"Name":"GetAttackDamage","Alias":"GetDamage","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Weapon_Type","type":"int:WeaponSkill"}],"Description":["Returns the weapon type."],"Name":"GetWeaponType","Alias":"GetWeapType","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the minimum spread of the weapon."],"Name":"GetWeaponMinSpread","Alias":"GetMinSpread","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the spread of the weapon."],"Name":"GetWeaponSpread","Alias":"GetSpread","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Returns the weapon projectile info."],"Name":"GetWeaponProjectile","Alias":"GetWeapProj","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the zoom field of view for the weapon."],"Name":"GetWeaponSightFOV","Alias":"GetSightFOV","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the min range of the weapon."],"Name":"GetWeaponMinRange","Alias":"GetMinRange","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the max range of the weapon."],"Name":"GetWeaponMaxRange","Alias":"GetMaxRange","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the ammo used per shot of the weapon."],"Name":"GetWeaponAmmoUse","Alias":"GetAmmoUse","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the number of action points per shot of the weapon."],"Name":"GetWeaponActionPoints","Alias":"GetAP","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the critical damage of the weapon."],"Name":"GetWeaponCritDamage","Alias":"GetCritDam","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the chance of a critical shot for the weapon."],"Name":"GetWeaponCritChance","Alias":"GetCritPerc","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Returns the spell for the critical effect for the weapon."],"Name":"GetWeaponCritEffect","Alias":"GetCritEffect","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the fire rate of the weapon."],"Name":"GetWeaponFireRate","Alias":"GetFireRate","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the animation attack multiplier of the weapon."],"Name":"GetWeaponAnimAttackMult","Alias":"GetAnimAttackMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the rumble left motor of the weapon."],"Name":"GetWeaponRumbleLeftMotor","Alias":"GetRumbleLeft","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the rumble right motor of the weapon."],"Name":"GetWeaponRumbleRightMotor","Alias":"GetRumbleRight","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the rumble duration of the weapon."],"Name":"GetWeaponRumbleDuration","Alias":"GetRumbleDuration","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the rumble wavelegnth for the weapon."],"Name":"GetWeaponRumbleWavelength","Alias":"GetRumbleWavelen","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the animation shots per second of the weapon."],"Name":"GetWeaponAnimShotsPerSec","Alias":"GetAnimShotsPerSec","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["retuns the animation reload time for the weapon."],"Name":"GetWeaponAnimReloadTime","Alias":"GetAnimReloadTime","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the animation jam time of the weapon."],"Name":"GetWeaponAnimJamTime","Alias":"GetAnimJamTime","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Actor_Value_Codes","type":"int:WeaponSkill"}],"Description":["Returns the skill for the weapon."],"Name":"GetWeaponSkill","Alias":"","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Actor_Value_Codes","type":"int:ResistValue"}],"Description":["Returns the resist type for the weapon."],"Name":"GetWeaponResistType","Alias":"GetWeaponResist","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the semi-auto min fire delay for the weapon."],"Name":"GetWeaponFireDelayMin","Alias":"GetFireDelayMin","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the semi-auto max fire delay for the weapon."],"Name":"GetWeaponFireDelayMax","Alias":"GetFireDelayMax","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the animation multiplier for the weapon."],"Name":"GetWeaponAnimMult","Alias":"GetAnimMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the reach of the weapon."],"Name":"GetWeaponReach","Alias":"GetReach","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Returns 1 if the weapon is an automatic weapon."],"Name":"GetWeaponIsAutomatic","Alias":"GetIsAutomatic","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Weapon_Hand_Grips","type":"int:HandGrip"}],"Description":["Returns the hand grip of the weapon."],"Name":"GetWeaponHandGrip","Alias":"GetHandGrip","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Reload_Animations","type":"int:ReloadAnim"}],"Description":["Returns the reload animation of the weapon."],"Name":"GetWeaponReloadAnim","Alias":"GetReloadAnim","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the base VATS chance of the weapon."],"Name":"GetWeaponBaseVATSChance","Alias":"GetVATSChance","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Attack_Animations","type":"int:AttackAnimation"}],"Description":["Returns the attack animation of the weapon."],"Name":"GetWeaponAttackAnimation","Alias":"GetAttackAnim","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the number of projectiles used in a single shot by the weapon."],"Name":"GetWeaponNumProjectiles","Alias":"GetNumProj","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the aim arc of the weapon."],"Name":"GetWeaponAimArc","Alias":"GetAimArc","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the limb damage multiplier of the weapon."],"Name":"GetWeaponLimbDamageMult","Alias":"GetLimbDamageMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the sight usage of the weapon."],"Name":"GetWeaponSightUsage","Alias":"GetSightUsage","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Returns whether the weapon has a scope or not."],"Name":"GetWeaponHasScope","Alias":"","Version":"1.1","Condition":"Yes","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Mod","type":"int:ModIndex"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Returns the weapon mod form at the specified index."],"Name":"GetWeaponItemMod","Alias":"","Version":"1.2","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the reload animation of the weapon."],"Name":"GetWeaponRequiredStrength","Alias":"GetReqStr","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the reload animation of the weapon."],"Name":"GetWeaponRequiredSkill","Alias":"GetReqSkill","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the long burst value of the weapon."],"Name":"GetWeaponLongBursts","Alias":"GetLongBursts","Version":"2.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Weapon_Flags","type":"int:WeaponFlags1"}],"Description":["Returns a the weapon flags in bit value."],"Name":"GetWeaponFlags1","Alias":"","Version":"2.6","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Weapon_Flags","type":"int:WeaponFlags2"}],"Description":["Returns a the weapon flags in bit value."],"Name":"GetWeaponFlags2","Alias":"","Version":"2.6","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:AmmoUse"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon ammo use."],"Name":"SetWeaponAmmoUse","Alias":"SetAmmoUse","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:ClipSize"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon clip size."],"Name":"SetWeaponClipRounds","Alias":"SetClipSize","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:AttackDamage"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the attack damage of the form."],"Name":"SetAttackDamage","Alias":"SetDamage","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Type","type":"int:WeaponType"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon type of the weapon."],"Name":"SetWeaponType","Alias":"","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:Spread"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon min spread."],"Name":"SetWeaponMinSpread","Alias":"SetMinSpread","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:Spread"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon spread."],"Name":"SetWeaponSpread","Alias":"Setspread","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:NewProjectile"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:OldProjectile"}],"Description":["Sets the projectile of the weapon."],"Name":"SetWeaponProjectile","Alias":"SetProjectile","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:FOV"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon xoom field of view."],"Name":"SetWeaponSightFOV","Alias":"SetsightFOV","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:Range"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon min range."],"Name":"SetWeaponMinRange","Alias":"SetMinRange","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:Range"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon max range."],"Name":"SetWeaponMaxRange","Alias":"SetMaxRange","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:NewAmmo"},{"type":"ref:ObjectID"}],"ReturnType":[{"type":"OldAmmo:BaseForm"}],"Description":["Sets the ammo of the weapon."],"Name":"SetWeaponAmmo","Alias":"SetAmmo","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:ActionPoints"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon number of action pointer per shot."],"Name":"SetWeaponActionPoints","Alias":"SetAP","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:CritDamage"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon critical hit damage."],"Name":"SetWeaponCritDamage","Alias":"SetWeaponCritDamage","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:CritChance"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon critical hit chance."],"Name":"SetWeaponCritChance","Alias":"SetCritPerc","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectEffect"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:OldCriticalEffect"}],"Description":["Sets the weapon critical hit effect."],"Name":"SetWeaponCritEffect","Alias":"SetCritEffect","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:FireRate"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon fire rate."],"Name":"SetWeaponFireRate","Alias":"SetFireRate","Version":"2.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:AnimAttackMult"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the anim attack multiplier."],"Name":"SetWeaponAnimAttackMult","Alias":"SetAnimAttackMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:AnimMult"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the animiation multiple of the weapon."],"Name":"SetWeaponAnimMult","Alias":"SetAnimMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"reach:Reach"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the reach of the weapon."],"Name":"SetWeaponReach","Alias":"SetReach","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"bool:IsAutomatic"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets whether the weapon is an automatic weapon or not."],"Name":"SetWeaponIsAutomatic","Alias":"SetIsAutomatic","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Hand_Grips","type":"int:HandGrip"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the hand grip of the weapon."],"Name":"SetWeaponHandGrip","Alias":"SetHandGrip","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Reload_Animations","type":"int:ReloadAnim"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the reload animation of the weapon."],"Name":"SetWeaponReloadAnim","Alias":"SetReloadAnim","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:NewVATSChance"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the base VATS chance for the weapon."],"Name":"SetWeaponBaseVATSChance","Alias":"SetVATSChance","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Attack_Animations","type":"int:AttackAnimation"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the attack animation for the weapon."],"Name":"SetWeaponAttackAnimation","Alias":"SetAttackAnim","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:NumProjectiles"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the number of projectiles the weapon fires each time it is shot."],"Name":"SetWeaponNumProjectiles","Alias":"SetNumProj","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:AimArc"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the aim arc of the weapon."],"Name":"SetWeaponAimArc","Alias":"SetAimArc","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:LimbDamageMult"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the limb damage multiplier for the weapon."],"Name":"SetWeaponLimbDamageMult","Alias":"SetLimbDamageMult","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:SightUsage"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the sight usage for the weapon."],"Name":"SetWeaponSightUsage","Alias":"SetsightUsage","Version":"1.1","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:NewStrength"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the required strength level of the weapon."],"Name":"SetWeaponRequiredStrength","Alias":"SetReqStr","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:NewSkill"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the required skill level of the weapon."],"Name":"SetWeaponRequiredSkill","Alias":"SetReqSkill","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Actor_Value_Codes","type":"int:WeaponSkill"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the skill type of the weapon."],"Name":"SetWeaponSkill","Alias":"","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Actor_Value_Codes","type":"int:ResistValue"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the required strength level of the weapon."],"Name":"SetWeaponResistType","Alias":"SetWeaponResist","Version":"1.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"float:Value"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the long burst value for the weapon."],"Name":"SetWeaponLongBursts","Alias":"SetLongBursts","Version":"2.5","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Flags","type":"int:WeaponFlags1"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon flags using int bit value notation."],"Name":"SetWeaponFlags1","Alias":"","Version":"2.6","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Flags","type":"int:WeaponFlags2"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the weapon flags using int bit value notation."],"Name":"SetWeaponFlags2","Alias":"","Version":"2.6","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[],"ReturnType":[{"url":"Weapon_Mod","type":"int:ModFlags"}],"Description":["Returns a bit value of the equipped weapon mods for the currently equipped weapon."],"Name":"GetEquippedWeaponModFlags","Alias":"","Version":"2.10","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Mod","type":"int:ModFlags"}],"Description":["Sets the current health of the equipped object at the given slot."],"Name":"SetEquippedWeaponModFlags","Alias":"","Version":"2.10","Convention":"R","Tags":["Weapon","Inventory"]},{"Parameters":[{"url":"Weapon_Mod","type":"int:ModIndex"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the specified item mod effect id of the weapon."],"Name":"GetWeaponItemModEffect","Alias":"","Version":"2.10","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:ModValue"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the specified item mod value1 of the weapon."],"Name":"GetWeaponItemModValue1","Alias":"","Version":"2.10","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"int:ModValue"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int"}],"Description":["Returns the specified item mod value2 of the weapon."],"Name":"GetWeaponItemModValue2","Alias":"","Version":"2.10","Convention":"E","Tags":["Weapon","Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:ArmorRating"}],"Description":["Returns the armor rating of the specified armor."],"Name":"GetArmorAR","Alias":"GetArmorArmorRating","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"bool:IsPowerArmor"}],"Description":["Returns whether the biped form is considered power armor."],"Name":"IsPowerArmor","Alias":"IsPA","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"int:DamageThreshold"}],"Description":["Returns the damage threshold of the armor."],"Name":"GetArmorDT","Alias":"GetArmorDamageThreshold","Version":"1.2","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"bool:IsPlayable"}],"Description":["Returns whether the specified object is playable or not. Returns true only if the object is of a type which can be flagged as playable in the editor."],"Name":"IsPlayable","Alias":"","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Equipment_Slot_IDs","type":"int:EquipmentSlotsMask"}],"Description":["Returns the slots used by the biped form as a bitmask.","The mask is a bitmask that should be built by using ClearBit/SetBit. The order is as defined in GECK in the slot list of an armor, and starts at 0."],"Name":"GetEquipmentSlotsMask","Alias":"GetESM","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"url":"Equipment_Slot_IDs","type":"int:EquipmentBipedMask"}],"Description":["Returns the flags used by the biped form as a bitmask."],"Name":"GetEquipmentBipedMask","Alias":"GetEBM","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"type":"int:SetIsPowerArmor"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets whether the armor is power armor or not."],"Name":"SetIsPowerArmor","Alias":"SetIsPA","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"int:ARValue"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the armor rating of the armor."],"Name":"SetArmorAR","Alias":"SetArmorArmorRating","Version":"1.2","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"float:DTValue"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the damage threshold of the armor."],"Name":"SetArmorDT","Alias":"SetArmorDamageThreshold","Version":"1.2","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"bool:IsPlayable"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Specifies whether the object can be used by the player."],"Name":"SetIsPlayable","Alias":"","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"url":"Equipment_Slot_IDs","type":"int:EquipmentSlotsMask"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the slots used by the biped form from a bitmask.","The mask is a bitmask that should be built by using ClearBit/SetBit. The order is as defined in GECK in the slot list of an armor, and starts at 0."],"Name":"SetEquipmentSlotsMask","Alias":"SetESM","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"url":"Equipment_Slot_IDs","type":"int:EquipmentBipedMask"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the slots used by the biped form from a bitmask.","The mask is a bitmask that should be built by using ClearBit/SetBit. The order of bit index for slots can be found in NVSE source files (GameForms.h, search for EBipedFlags)."],"Name":"SetEquipmentBipedMask","Alias":"SetEBM","Version":"4.2","Convention":"E","Tags":["Inventory","Armor"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"float:AmmoVelocity"}],"Description":["Returns the speed value of the ammo."],"Name":"GetAmmoSpeed","Alias":"","Version":"1.5","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"float:Percent"}],"Description":["Returns the percentage chance of getting the casing item from the ammo."],"Name":"GetAmmoConsumedPercent","Alias":"","Version":"1.5","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the casing item given by the ammo."],"Name":"GetAmmoCasing","Alias":"","Version":"1.5","Convention":"E","Tags":["Inventory"]},{"Parameters":[],"ReturnType":[{"type":"int:CurrentRounds"}],"Description":["Returns the number of rounds in the player's equipped weapon."],"Name":"GetPlayerCurrentAmmoRounds","Alias":"","Version":"1.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"int:CurrentRounds"}],"Description":["Sets the current number of rounds in the clip of the player."],"Name":"SetPlayerCurrentAmmoRounds","Alias":"","Version":"1.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[],"ReturnType":[{"type":"ref:Ammo"}],"Description":["Returns the current ammo in the weapon held by the player."],"Name":"GetPlayerCurrentAmmo","Alias":"","Version":"1.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"ref:AnyForm","optional":"true"}],"ReturnType":[{"type":"ref:ClonedForm"}],"Description":["Clones the specified form and returns a new base form which will not be saved in the save game."],"Examples":[{"Example":["ref clonedInventoryItem","set clonedInventoryItem to TempCloneForm Weap10mmPistol"]}],"Name":"TempCloneForm","Alias":"","Version":"2.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:AnyForm","optional":"true"}],"ReturnType":[{"type":"bool:IsCloned"}],"Description":["Returns whether the specified form is a created object or not."],"Name":"IsClonedForm","Alias":"IsCloned","Version":"2.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"ref:ObjectID"}],"Description":["Sets the name of the object based on the format string."],"Name":"SetNameEx","Alias":"","Version":"2.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"ref:ObjectID"},{"type":"float:Count"},{"type":"ref:ActorOrFaction"},{"type":"int:Rank"}],"ReturnType":[{"type":"int:Unknown"}],"Description":["Adds an item to a container with a specified ownership."],"Name":"AddItemOwnership","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory","Owner"]},{"Parameters":[{"type":"ref:ObjectID"},{"type":"float:Count"},{"type":"float:Health"},{"type":"ref:ActorOrFaction"},{"type":"int:Rank"}],"ReturnType":[{"type":"int:Unknown"}],"Description":["Adds an item to a container at a specified health percentage and with an ownership."],"Name":"AddItemHealthPercentOwner","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory","Owner"]},{"Parameters":[{"type":"ref:ItemList"}],"ReturnType":[{"type":"ref:AnyForm"}],"Description":["Returns a random item in the FormList."],"Name":"PickOneOf","Alias":"","Version":"4.2","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:ObjectID"},{"type":"int:LockEquip","optional":"true"},{"type":"int:Silent","optional":"true"}],"Description":["Equips an item and runs its OnEquip block."],"Name":"EquipItem2","Alias":"","Version":"4.5","Convention":"E","Tags":["Inventory"]},{"Parameters":[],"Description":["Equips the calling object on its owner."],"Name":"EquipMe","Alias":"","Version":"4.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[],"Description":["Unequips the calling object on its owner."],"Name":"UnequipMe","Alias":"","Version":"4.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[],"Description":["Returns 1 if the calling object is currently being worn."],"Name":"IsEquipped","Alias":"","Version":"4.5","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container","optional":"true"}],"Description":["Removes an inventory reference from its container, optionally transferring it to a different container, in much the same way as the vanilla RemoveMe command. The inventory reference becomes invalid once this command is called and should no longer be used."],"Name":"RemoveMeIR","Alias":"","Version":"3.1","Convention":"B","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container","optional":"true"}],"ReturnType":[{"type":"bool:Success"}],"Description":["Copies an inventory reference to the specified container. The calling object needn't be in a container and remains valid after the command is called. If the calling object is equipped, the copy will not be equipped."],"Name":"CopyIR","Alias":"","Version":"3.1","Convention":"R","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container"}],"Description":["Creates a temporary reference to the specified form. This reference does not exist in the gameworld or in a container."],"Name":"CreateTempRef","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the first entry in an array of temp refs to objects of the specified type in the calling container, and remains valid for only one frame. It is mostly useful for creating a stack of one or more items to be added to a container with CopyIR"],"Name":"GetFirstRefForItem","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container"}],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the next entry in the array of temp refs to objects of the specified type in the calling container."],"Name":"GetNextRefForItem","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"ref:Container"}],"ReturnType":[{"type":"array_var:ContainerRefs"}],"Description":["Returns an array of temp refs to objects of the specified type in the calling container."],"Name":"GetInvRefsForItem","Alias":"","Version":"3.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[{"type":"form list:FormList"},{"type":"form:GenericObjec"}],"ReturnType":[{"type":"index:Integer"}],"Description":["Checks whether a ref, its baseform, or its leveled baseForm is in a FormList and Returns the index."],"Name":"IsRefInList","Alias":"","Version":"3.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"}],"ReturnType":[{"type":"Integer"}],"Description":["Returns the count of items in the form list."],"Name":"ListGetCount","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"index:Integer"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Returns the nth form in the form list."],"Name":"ListGetNthForm","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"form:AnyForm"}],"ReturnType":[{"type":"Integer"}],"Description":["Returns the index for the specified form or base Form or permanent base Form."],"Name":"ListGetFormIndex","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"form:AnyForm"},{"type":"index:Integer","optional":"true"}],"ReturnType":[{"type":"BaseForm"}],"Description":["Adds the form to the list at the given index (or at the end if not provided)"],"Name":"ListAddForm","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"index:Integer","optional":"true"}],"ReturnType":[{"type":"Integer"}],"Description":["Adds the calling reference at the given index (or at the end if not provided)"],"Name":"ListAddReference","Alias":"ListAddRef","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"form:AnyForm"}],"ReturnType":[{"type":"indexOfFormRemoved:Integer"}],"Description":["Removes the specified from from the list."],"Name":"ListRemoveForm","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"index:Integer","optional":"true"}],"ReturnType":[{"type":"formRemoved:BaseForm"}],"Description":["Removes the nth form from the list."],"Name":"ListRemoveNthForm","Alias":"ListRemoveNth","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"replaceWith:AnyForm"},{"type":"formIndex:Integer","optional":"true"}],"ReturnType":[{"type":"replaced:BaseForm"}],"Description":["Replaces the nth form of the list with the specified form."],"Name":"ListReplaceNthForm","Alias":"ListReplaceNth","Version":"1.1","Convention":"R","Tags":[]},{"Parameters":[{"type":"form list:FormList"},{"type":"replaceWith:AnyForm"},{"type":"formToReplace:AnyForm"}],"ReturnType":[{"type":"index:Integer"}],"Description":["Replaces the specified from with another."],"Name":"ListReplaceForm","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"form list:FormList"}],"Description":["Removes all entries from the list."],"Name":"ListClear","Alias":"","Version":"1.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"float:Float"}],"ReturnType":[{"type":"float:Float"}],"Description":["Calculates the exponential of a value."],"Name":"Exp","Alias":"","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"float:Float"}],"ReturnType":[{"type":"float:Float"}],"Description":["Calculates the base 10 log of a value."],"Name":"Log10","Alias":"","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"float:Float"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Returns the nearest whole number that is less than a float."],"Name":"Floor","Alias":"flr","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"float:Float"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Returns the nearest whole number that is greater than a float."],"Name":"Ceil","Alias":"","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"int:Integer"},{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Shifts a 32-bit integer left the specified number of bits."],"Name":"LeftShift","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"int:Integer"},{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Shifts a 32-bit integer right the specified number of bits."],"Name":"RightShift","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"int:Integer"},{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Performs a logical AND between two 32-bit integers."],"Name":"LogicalAnd","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"int:Integer"},{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Performs a logical OR between two 32-bit integers."],"Name":"LogicalOr","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"int:Integer"},{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Performs a logical XOR between two 32-bit integers."],"Name":"LogicalXor","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"int:Integer"}],"ReturnType":[{"type":"int:Integer"}],"Description":["Performs a logical NOT on a 32-bit integer."],"Name":"LogicalNot","Alias":"","Version":"1.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"float:Float"},{"type":"float:Float"}],"ReturnType":[{"type":"float:Float"}],"Description":["Calculates one value raised to the power of another."],"Name":"Pow","Alias":"","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"valueToSet:Integer"},{"type":"bitToChange:Integer"},{"type":"clearBit:Integer","optional":"true"}],"ReturnType":[{"type":"newValue:Integer"}],"Description":["Sets the value of the specified bit. The optional parameter Clears the value. For the optional parametere 1=Set, 0=Clear"],"Name":"SetBit","Alias":"","Version":"2.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"valueToChange:Integer"},{"type":"bitToClear:Integer"}],"ReturnType":[{"type":"newValue:Integer"}],"Description":["Clears the specified bit."],"Name":"ClearBit","Alias":"","Version":"2.6","Convention":"B","Tags":["Math","Logical","Binary","Bit"]},{"Parameters":[{"type":"x:Float"},{"type":"n:Float"},{"type":"offset:Float","optional":"true"}],"ReturnType":[{"type":"Float"}],"Description":["Returns the floating point modulus of dividend in the given base. This differs from dividend % base in the scripting language as % is a strictly integer function. When base is positive, 0 <= result < base. The optional offset shifts the range of the result to offset <= result < base+offset.","The two most likely uses of this function are modulus angle 360 to normalize a computed angle, i.e., ensure it is = 0 and < 360.0 and modulus angle 360 -180 which ensures the computed [change of] angle is = -180.0 and < 180.0.","Modulus n base is defined as n - base Floor n / base. If the base is negative the direction of the inequality changes. Thus: 0 = result  base and offset = result  base+offset."],"Name":"fmod","Alias":"","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"min:Float"},{"type":"max:Float"}],"ReturnType":[{"type":"float:Float"}],"Description":["Returns a random number between min and max."],"Name":"Rand","Alias":"r","Version":"1.6","Convention":"B","Tags":["Math"]},{"Parameters":[{"type":"NPC:Actor","optional":"true"}],"Description":["Return NPC age class. From 0=Child -default- to 3=OldAged. -1 for non NPC. Based on race fullname."],"Name":"GetAgeClass","Alias":"","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"NPC:Actor","optional":"true"}],"Description":["Return if the respawn flag is set on a base form."],"Name":"GetRespawn","Alias":"","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"flag:Integer"},{"type":"actor:Actor","optional":"true"}],"Description":["Sets the respawn flag on a base form."],"Name":"SetRespawn","Alias":"","Version":"3.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:ObjectRef","optional":"true"}],"Description":["Return if the permanent flag is set on a base form."],"Name":"GetPermanent","Alias":"","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"flag:Integer"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Sets the permanent flag on a base form."],"Name":"SetPermanent","Alias":"","Version":"3.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"ReturnType":[{"type":"ref:Race"}],"Description":["Return NPC race."],"Name":"GetRace","Alias":"","Version":"4.2","Condition":"Yes","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC"}],"ReturnType":[{"type":"string_var:RaceName"}],"Description":["Return the name of the NPC race."],"Name":"GetRaceName","Alias":"","Version":"4.2","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"baseForm:Perk"},{"type":"ref:NPC","optional":"true"}],"ReturnType":[{"type":"int:PerkRank"}],"Description":["Return actor Perk rank or -1 if the perk is not applied."],"Name":"GetPerkRank","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"baseForm:Perk"},{"type":"ref:NPC","optional":"true"}],"ReturnType":[{"type":"int:PerkRank"}],"Description":["Return the alternate companion Perk rank or -1 if the perk is not applied."],"Name":"GetAltPerkRank","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"baseForm:Race"}],"ReturnType":[{"type":"array_var:RaceHairs"}],"Description":["Return an array of hair for a race."],"Name":"GetRaceHairs","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"baseForm:Race"}],"ReturnType":[{"type":"array_var:RaceEyes"}],"Description":["Return an array of eyes for a race."],"Name":"GetRaceEyes","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:Spells"}],"Description":["Return an array of spells for a SpellList."],"Name":"GetBaseSpellListSpells","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:Spells"}],"Description":["Return an array of leveled spells for a SpellList."],"Name":"GetBaseSpellListLevSpells","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:Packages"}],"Description":["Returns an array of packages for an actor base form."],"Name":"GetBasePackages","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:Factions"}],"Description":["Returns an array of factions to which an actor base form belongs."],"Name":"GetBaseFactions","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:FactionRanks"}],"Description":["Returns an array of faction ranks to which an actor base form belongs."],"Name":"GetBaseRanks","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:Factions"}],"Description":["Returns the active factions on an actor."],"Name":"GetActiveFactions","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:FactionRanks"}],"Description":["Returns the active faction ranks on an actor."],"Name":"GetActiveRanks","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"objectBase:Faction"}],"ReturnType":[{"type":"array_var:FactionRankNames"}],"Description":["Returns an array of names of faction ranks."],"Name":"GetFactionRankNames","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"actorBase:Actor","optional":"true"}],"ReturnType":[{"type":"array_var:HeadParts"}],"Description":["Returns an array of head parts for a character."],"Name":"GetHeadParts","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"objectBase:CreatureList","optional":"true"}],"ReturnType":[{"type":"array_var:CreatureRefs"}],"Description":["Returns an array of the refs in a leveled creature leveled list."],"Name":"GetLevCreatureRefs","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"objectBase:CharacterList","optional":"true"}],"ReturnType":[{"type":"array_var:CharacterRefs"}],"Description":["Returns an array of the refs in a leveled character leveled list."],"Name":"GetLevCharacterRefs","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"objectBase:FormList"}],"ReturnType":[{"type":"array_var:ListForms"}],"Description":["Returns an array of forms in a form list."],"Name":"GetListForms","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:Which"},{"type":"anyForm:ContainingForm"},{"type":"anyForm:FormToAdd"},{"type":"int:Index"}],"ReturnType":[{"type":"int:IndexAddedAt"}],"Description":["Adds a form to a list of forms of an object at index."],"Examples":[{"Example":["let indexAddedAt := GenericAddForm whichEmbeddedList objectContainingTheEmbeddedList formToAdd index"]}],"Name":"GenericAddForm","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:Which"},{"type":"anyForm:ContainingForm"},{"type":"anyForm:FormToAdd"},{"type":"int:Index"}],"ReturnType":[{"type":"int:IndexAddedAt"}],"Description":["Change a form in a list of forms of an object at index."],"Examples":[{"Example":["let previousForm := GenericReplaceForm whichEmbeddedList objectContainingTheEmbeddedList replacingForm index"]}],"Name":"GenericReplaceForm","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:Which"},{"type":"anyForm:ContainingForm"},{"type":"int:Index"}],"ReturnType":[{"type":"int:IndexAddedAt"}],"Description":["Delete a form from a list of forms of an object at index."],"Examples":[{"Example":["let previousForm := GenericDeleteForm whichEmbeddedList objectContainingTheEmbeddedList index"]}],"Name":"GenericDeleteForm","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:Which"},{"type":"anyForm:ContainingForm"},{"type":"int:Index"}],"ReturnType":[{"type":"int:IndexAddedAt"}],"Description":["Returns a form from a list of forms of an object at index."],"Examples":[{"Example":["let currentForm := GenericGetForm whichEmbeddedList objectContainingTheEmbeddedList index"]}],"Name":"GenericGetForm","Alias":"","Version":"4.5 b7","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:Index"}],"ReturnType":[{"url":"Default_Form","type":"string_var:DefaultForm"}],"Description":["Returns the Nth default form."],"Name":"GetNthDefaultForm","Alias":"","Version":"4.5 b7","Convention":"B","Tags":[]},{"Parameters":[{"type":"int:Index"},{"url":"Default_Form","type":"form:AnyForm"}],"Description":["Sets the Nth default form."],"Name":"SetNthDefaultForm","Alias":"","Version":"4.5 b7","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"array_var:ListForms"}],"Description":["Returns all default forms as an array."],"Name":"GetDefaultForms","Alias":"","Version":"4.5 b7","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:PluginName"}],"ReturnType":[{"type":"bool:Installed"}],"Description":["Returns 1 if the plugin is installed."],"Name":"IsPluginInstalled","Alias":"","Version":"4.5 b7","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:PluginName"}],"ReturnType":[{"type":"int:Version"}],"Description":["Returns the version of the specified plugin, or -1 if the plugin is not installed."],"Name":"GetPluginVersion","Alias":"","Version":"4.5 b7","Convention":"B","Tags":[]},{"Parameters":[],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the base object id of the reference."],"Name":"GetBaseObject","Alias":"gbo","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the permanent base object id of the reference."],"Examples":[{"Example":["ref DeathClawBase","set DeathClawBase to SomeLeveledDeathClawREF.GetBaseForm"]}],"Name":"GetBaseForm","Alias":"gbf","Version":"3.1","Convention":"","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"bool:IsPersistent"}],"Description":["Returns true if the calling reference is persistent."],"Examples":[{"Example":["if SomeRef.IsPersistent","    ; it is safe to proceed","endif"]}],"Name":"IsPersistent","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:Cell"}],"Description":["Returns the parent cell of the reference."],"Name":"GetParentCell","Alias":"gpc","Version":"1.1","Convention":"","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:ParentWorldspace"}],"Description":["Returns the parent worldspace of the reference."],"Name":"GetParentWorldspace","Alias":"gpw","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:Cell"}],"Description":["Returns the cell to which the calling door reference teleports."],"Name":"GetTeleportCell","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:LinkedDoor"}],"Description":["Returns the door to which the calling reference is linked."],"Name":"GetLinkedDoor","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:Owner"}],"Description":["Returns the owner of the calling reference."],"Name":"GetOwner","Alias":"","Version":"1.9","Convention":"B","Tags":["Owner"]},{"Parameters":[],"ReturnType":[{"type":"ref:Owner"}],"Description":["Returns the owner of the cell of the calling reference."],"Name":"GetParentCellOwner","Alias":"","Version":"2.1","Convention":"B","Tags":["Owner"]},{"Parameters":[],"ReturnType":[{"type":"int:Rank"}],"Description":["Returns the required rank for ownership of the calling reference."],"Name":"GetOwningFactionRequiredRank","Alias":"","Version":"2.1","Convention":"B","Tags":["Owner"]},{"Parameters":[],"ReturnType":[{"type":"int:Rank"}],"Description":["Returns the required rank for ownership of the cell of the calling reference."],"Name":"GetParentCellOwningFactionRequiredRank","Alias":"","Version":"2.1","Convention":"B","Tags":["Owner"]},{"Parameters":[{"url":"Form_Type_IDs","type":"int:FormType","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs:","optional":"true"}],"ReturnType":[{"type":"ref:ObjectRef"}],"Description":["Returns the first reference in the current cell. A type can optionally be supplied to return only references matching that type. Additionally, you can pass 200 for actors and 201 for inventory items. This function should be used only within a Label...Goto loop and GetNextRef.","An optional cell depth can be supplied to specify the number of adjacent cells to scan in exteriors: a cell depth of 1 scans the player's current cell plus 8 adjacent cells, a depth of 2 scans the player's cell plus 25 adjacent cells.","By default, inactive references to items which were previously picked up by an actor are ignored; passing 1 for the third parameter will force those references to be included."],"Name":"GetFirstRef","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:ObjectRef"}],"Description":["Returns the next reference of a given type in the current cell. GetFirstRef or GetFirstRefInCell must be called first; the formType, cellDepth, and boolean arguments passed to GetFirstRef/GetFirstRefInCell are used. This command should only be used within a loop that executes within a single frame."],"Name":"GetNextRef","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[{"url":"Form_Type_IDs","type":"int:FormType","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs","optional":"true"}],"ReturnType":[{"type":"Integer"}],"Description":["Returns the number of references in the current cell which match the optionally supplied type code. Use 200 for actors and 201 for inventory items. An optional cell depth can be specified for exteriors. By default, inactive references to items which were previously picked up by an actor are ignored; passing 1 for the third parameter will force those references to be included."],"Name":"GetNumRefs","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[{"url":"Form_Type_IDs","type":"int:TypeID","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs","optional":"true"}],"ReturnType":[{"type":"array_var:CellRefs"}],"Description":["Used in place of <a href=\"GetFirstRef\">GetFirstRef</a> to get an array of all the references in the current cell and optionally the surrounding cells.","Setting cell depth to -1 will use the uGridsToLoad value."],"Examples":[{"Example":["array_var ar_cellContents","array_var ar_element"," ","let ar_cellContents := GetRefs 200 2        ; find actor refs within 2 cells","ForEach ar_element <- ar_cellContents","        ; do what needs to be done here","        ; maybe we have a condition that skips the rest so use","        Continue","        ; or another condition that ends the loop, so","        Break","Loop"]}],"Name":"GetRefs","Alias":"","Version":"4.5 b7","Convention":"B","Tags":["Reference"]},{"Parameters":[{"type":"ref:Cell"},{"url":"Form_Type_IDs","type":"int:FormType","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs","optional":"true"}],"ReturnType":[{"type":"ref:ObjectRef"}],"Description":["Works the same as GetFirstRef but takes an additional parameter specifying the cell to scan. Note that if the specified is not loaded in memory, this function will only return persistent references. Use GetNextRef to iterate through the rest of the references in the cell."],"Examples":[{"Example":["let rRef := GetFirstRefInCell 200 2        ; find actor refs within 2 cells","While (IsFormValid rRef)","        ; do stuff","        let rRef := GetNextRef","Loop"]}],"Name":"GetFirstRefInCell","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[{"type":"cell:TargetCell"},{"url":"Form_Type_IDs","type":"int:TypeID","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs","optional":"true"}],"ReturnType":[{"type":"array_var:CellRefs"}],"Description":["Used in place of <a href=\"GetFirstRefInCell\">GetFirstRefInCell</a> to get an array of all the references in a cell (and optional surrounding cells).","Setting cell depth to -1 will use the uGridsToLoad value."],"Examples":[{"Example":["array_var ar_cellContents","array_var ar_element"," ","let ar_cellContents := GetRefsInCell TargetCell 200        ; find actor refs in TargetCell","ForEach ar_element <- ar_cellContents","        ; do what needs to be done here","Loop"]}],"Name":"GetRefsInCell","Alias":"","Version":"4.5 b7","Convention":"B","Tags":["Reference"]},{"Parameters":[{"type":"ref:Cell"},{"url":"Form_Type_IDs","type":"int:FormType","optional":"true"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs:","optional":"true"}],"ReturnType":[{"type":"int:Count"}],"Description":["Works the same as GetNumRefs but takes an additional parameter specifying the cell to scan. Only counts persistent references if the cell is not loaded in memory."],"Name":"GetNumRefsInCell","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"int:RefCount"}],"Description":["Returns the count in a stacked reference."],"Name":"GetRefCount","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[{"type":"int:NewCount"}],"Description":["Sets the number of items in a stack of items in the world. Note that while this function will change the count of any type of reference, it may have unpredictable results when used on references like NPCs which are not logically stackable."],"Name":"SetRefCount","Alias":"","Version":"1.1","Convention":"R","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"ref:ObjectID"}],"Description":["Returns the key associated with a lockable object."],"Name":"GetOpenKey","Alias":"GetKey","Version":"1.6","Convention":"R","Tags":["Reference"]},{"Parameters":[{"type":"ref:ObjectID"}],"Description":["Sets the key used to unlock the calling object."],"Name":"SetOpenKey","Alias":"SetKey","Version":"3.3","Convention":"R","Tags":["Input"]},{"Parameters":[],"Description":["Clears the key used to unlock the calling object."],"Name":"ClearOpenKey","Alias":"ClearKey","Version":"3.4","Convention":"R","Tags":["Input"]},{"Parameters":[{"type":"actor base:ActorBase","optional":"true"}],"ReturnType":[{"url":"Actor_Flags","type":"int:ActorFlagsLow"}],"Description":["Returns a bitfield containing actor base flags."],"Name":"GetActorBaseFlagsLow","Alias":"","Version":"2.6","Convention":"E","Tags":["Reference"]},{"Parameters":[{"url":"Actor_Flags","type":"int:ActorFlagsLow"},{"type":"ref:NPC","optional":"true"}],"Description":["Sets the flags of the actor. Use of unknown bits may cause random behavior."],"Name":"SetActorBaseFlagsLow","Alias":"","Version":"2.6","Convention":"E","Tags":["Reference"]},{"Parameters":[{"type":"actor base:ActorBase","optional":"true"}],"ReturnType":[{"url":"Actor_Flags","type":"int:ActorFlagsHigh"}],"Description":["Returns a bitfield containing actor base flags."],"Name":"GetActorBaseFlagsHigh","Alias":"","Version":"2.6","Convention":"E","Tags":["Reference"]},{"Parameters":[{"url":"Actor_Flags","type":"int:ActorFlagsHigh"},{"type":"ref:NPC","optional":"true"}],"Description":["Sets actor base flags."],"Name":"SetActorBaseFlagsHigh","Alias":"","Version":"2.6","Convention":"E","Tags":["Reference"]},{"Parameters":[{"type":"ref:ObjectRef","optional":"true"}],"Description":["Check if an NPC has direct or indirect ownership."],"Name":"HasOwnership","Alias":"","Version":"3.1","Condition":"Yes","Convention":"","Tags":["Reference"]},{"Parameters":[{"type":"actor reference:Actor","optional":"true"}],"Description":["Check if an object is directly or indirectly owned by an NPC."],"Name":"IsOwned","Alias":"","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Reference"]},{"Parameters":[{"type":"int:Rank"}],"Description":["Sets the required rank for ownership of the calling reference."],"Name":"SetOwningFactionRequiredRank","Alias":"","Version":"3.1","Convention":"B","Tags":["Reference"]},{"Parameters":[{"type":"body data:AnyForm"},{"type":"base NPC:NPC","optional":"true"}],"Description":["Set an NPCs eyes."],"Name":"SetEyes","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Get an NPCs eyes."],"Name":"GetEyes","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"body data:AnyForm"},{"type":"base NPC:NPC","optional":"true"}],"Description":["Set an NPCs hair."],"Name":"SetHair","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Set an NPCs hair."],"Name":"GetHair","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"float:HairLength"},{"type":"ref:NPC","optional":"true"}],"Description":["Set an NPCs hair length."],"Name":"SetHairLength","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Get an NPCs hair length."],"Name":"GetHairLength","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"int:HairColor"},{"type":"ref:NPC","optional":"true"}],"Description":["Set an NPCs hair color (RGB bytes)."],"Name":"SetHairColor","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Get an NPCs hair color (code."],"Name":"GetHairColor","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"float:Weight"},{"type":"ref:NPC","optional":"true"}],"Description":["Set an NPCs weight."],"Name":"SetNPCWeight","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Get an NPCs weight."],"Name":"GetNPCWeight","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"float:Weight"},{"type":"ref:NPC","optional":"true"}],"Description":["Set an NPCs height."],"Name":"SetNPCHeight","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[{"type":"ref:NPC","optional":"true"}],"Description":["Get an NPCs height."],"Name":"GetNPCHeight","Alias":"","Version":"4.1","Convention":"E","Tags":["Actor"]},{"Parameters":[],"Description":["Updates the visual representation of the calling reference."],"Name":"Update3D","Alias":"","Version":"4.1","Convention":"E","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"bool:IsSwimming"}],"Description":["Check if the player is swimming."],"Name":"IsPlayerSwimming","Alias":"","Version":"4.2","Convention":"B","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"bool:CameraActive"}],"Description":["Returns wether or not Fly Camera is active."],"Name":"GetTFC","Alias":"","Version":"4.2","Convention":"B","Tags":["Reference"]},{"Parameters":[],"ReturnType":[{"type":"int:Version"}],"Description":["Returns the version of the Lutana NVSE plugin."],"Name":"GetLNVersion","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"string:FilePath"}],"ReturnType":[{"type":"bool:Exists"}],"Description":["Returns whether or not a file exists in the Data directory for a given file path. You can pass a string_var by using the ToString ($) operator."],"Name":"FileExists","Alias":"","Version":"","Convention":"B","Tags":["Lutana","File"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"string_var:TimeStamp"}],"Description":["Returns a string_var containing the user's current local time in the following format: \"20140326072834\" (YYYYMMDDHHmmSS)"],"Name":"GetTimeStamp","Alias":"","Version":"","Convention":"B","Tags":["Lutana","String"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"formList:OutList"},{"url":"Form_Type_IDs","type":"int:TypeID"}],"Description":["Empties a form list and then fills it with every form of the given type ID from all loaded plugins. <a href=\"#Form_Type_IDs\">Form Type IDs</a>"],"Name":"GetLoadedType","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"formList:InputList"}],"ReturnType":[{"type":"array_var:ListArray"}],"Description":["Converts a form list into an array_var with elements at matching indexes."],"Name":"ListToArray","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"string:VariableName"},{"type":"float:Value"},{"type":"baseForm:Quest","optional":"true"}],"ReturnType":[{"type":"float:OldValue"}],"Description":["Sets the value of a numerical variable by name in the script attached to a reference or quest.","The same as NVSE's <a href=\"#SetVariable\">SetVariable</a> function. Use SetVariable."],"Name":"SetVariableFloat","Alias":"","Version":"","Convention":"E","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:Value"},{"type":"baseForm:Quest","optional":"true"}],"ReturnType":[{"type":"float:OldValue"}],"Description":["Sets the value of a reference variable by name in the script attached to a reference or quest.","The same as NVSE's <a href=\"#SetRefVariable\">SetVariable</a> function. Use SetVariable."],"Name":"SetVariableRef","Alias":"","Version":"","Convention":"E","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"url":"Form_Type_IDs","type":"int:TypeID"},{"type":"int:CellDepth","optional":"true"},{"type":"bool:IncludeTakenRefs","optional":"true"},{"type":"cell:TargetCell","optional":"true"}],"ReturnType":[{"type":"array_var:CellRefs"}],"Description":["Used in place of <a href=\"GetFirstRef\">GetFirstRef</a> or <a href=\"GetFirstRefInCell\">GetFirstRefInCell</a> to get an array of all the references in a cell (and optional surrounding cells)."],"Examples":[{"Example":["array_var ar_cellContents","array_var ar_element"," ","let ar_cellContents := GetCellRefs 200 2        ; find actor refs within 2 cells of me","ForEach ar_element <- ar_cellContents","        ; do what needs to be done here","        ; maybe we have a condition that skips the rest so use","        Continue","        ; or another condition that ends the loop, so","        Break","Loop"]}],"Name":"GetCellRefs","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"ref:CombatStyle"}],"Description":["Returns the current combat style used by an NPC or creature reference."],"Name":"GetCombatStyle","Alias":"","Version":"","Convention":"R","Tags":["Lutana","Actor"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"Description":["Saves the player's current hotkeys to an in-memory array."],"Name":"SaveHotkeys","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"Description":["Restores the player's hotkeys stored with SaveHotkeys."],"Name":"RestoreHotkeys","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"baseForm:Perk"},{"type":"bool:Alt","optional":"true"}],"ReturnType":[{"type":"int:Rank"}],"Description":["Return the rank of a perk on the player, or 0 if the player does not have the perk. Passing 1 to the 'alt' parameter uses the follower perk list."],"Name":"HasPerkRank","Alias":"","Version":"","Convention":"E","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"string:Global"},{"type":"float:Value"}],"ReturnType":[{"type":"float:OldValue"}],"Description":["Sets the value of a numeric global variable."],"Name":"SetGlobalValue","Alias":"","Version":"","Convention":"B","Tags":["Lutana"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"int:Index"},{"type":"int:KeepExtension"}],"ReturnType":[{"type":"string:ModName"}],"Description":["Returns a string containing the file name, minus the extension, of the mod at the given index. Pass '1' as an optional second parameter to keep the extension."],"Name":"GetModName","Alias":"","Version":"","Convention":"B","Tags":["Lutana","String"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"baseForm:Armor"}],"ReturnType":[{"type":"formList:BipedModelList"}],"Description":["Returns the biped model list of an armor form."],"Name":"GetBipedModelList","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"baseForm:Armor"},{"type":"formList:BipedModelList"}],"Description":["Sets the biped model list of an armor form."],"Name":"SetBipedModelList","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"ref:FormToAdd"},{"type":"int:Level"},{"type":"int:Count"},{"type":"float:Health"}],"Description":["Creates a new entry in a leveled list with the given parameters. (Use decimal values between 0.0 and 1.0 for health percentage.)"],"Name":"LeveledListAddForm","Alias":"LListAddForm","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"ref:FormToRemove"}],"ReturnType":[{"type":"int:NumberRemoved"}],"Description":["Removes all entries with the given form from a leveled list. Returns the number of entries removed."],"Name":"LeveledListRemoveForm","Alias":"LListRemoveForm","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"}],"ReturnType":[{"type":"int:NumberRemoved"}],"Description":["Returns the number of entries in a leveled list."],"Name":"GetNumLevItems","Alias":"LListGetCount","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"ref:FormToFind"}],"ReturnType":[{"type":"int:Index"}],"Description":["Returns the index of the first entry containing the given form."],"Name":"GetLevItemIndexByForm","Alias":"LListGetFormIndex","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Level"}],"ReturnType":[{"type":"int:Index"}],"Description":["Returns the index of the first entry for the given level."],"Name":"GetLevItemIndexByLevel","Alias":"LListGetLevelIndex","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Index"}],"ReturnType":[{"type":"ref:FormAtIndex"}],"Description":["Returns the form of the entry at the given index."],"Name":"GetNthLevItem","Alias":"LListGetNthForm","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Index"}],"ReturnType":[{"type":"int:Level"}],"Description":["Returns the level of the entry at the given index."],"Name":"GetNthLevItemLevel","Alias":"LListGetNthLevel","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Index"}],"ReturnType":[{"type":"int:Count"}],"Description":["Returns the count of the entry at the given index."],"Name":"GetNthLevItemCount","Alias":"LListGetNthCount","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Index"}],"Description":["Removes the leveled list entry at the given index."],"Name":"RemoveNthLevItem","Alias":"LListRemoveNthForm","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"}],"Description":["Removes all entries from a leveled list."],"Name":"LeveledListClear","Alias":"LListClear","Version":"","Convention":"B","Tags":["Lutana","Inventory"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"}],"ReturnType":[{"type":"int:Chance"}],"Description":["Returns the 'none' chance of a leveled list."],"Name":"GetChanceNone","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory","LeveledList","LList"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"}],"ReturnType":[{"type":"int:Chance"}],"Description":["Returns the global variable governing the 'none' chance of a leveled list."],"Name":"GetChanceNoneGlobal","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory","LeveledList","LList"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"},{"type":"int:Chance"}],"Description":["Sets the 'none' chance of a leveled list."],"Name":"SetChanceNone","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory","LeveledList","LList"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"ref:LeveledList"}],"Description":["Similar to ar_Dump, outputs all entries to the console."],"Name":"DumpLevList","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Inventory","LeveledList","LList"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"int:Port"}],"Description":["Returns which 'port' the gamepad is using, ranging from 1 to 4. This corresponds to the light around the Guide button on Xbox controllers."],"Name":"GetController","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"int:BitMask"}],"ReturnType":[{"type":"bool:Pressed"}],"Description":["Returns whether or not the button is currently pressed. Uses a bitmask.","00001 : DPAD_UP<br>00002 : DPAD_DOWN<br>00004 : DPAD_LEFT<br>00008 : DPAD_RIGHT<br>00016 : START<br>00032 : BACK<br>00064 : LEFT_THUMBSTICK<br>00128 : RIGHT_THUMBSTICK<br>00256 : LEFT_SHOULDER (LB)<br>00512 : RIGHT_SHOULDER (RB)<br>01024 : XBOX_GUIDE<br>04096 : BUTTON_A<br>08192 : BUTTON_B<br>16384 : BUTTON_X<br>32768 : BUTTON_Y"],"Name":"IsButtonPressed","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"int:BitMask"}],"Description":["Returns a bitfield of buttons currently pressed.","00001 : DPAD_UP<br>00002 : DPAD_DOWN<br>00004 : DPAD_LEFT<br>00008 : DPAD_RIGHT<br>00016 : START<br>00032 : BACK<br>00064 : LEFT_THUMBSTICK<br>00128 : RIGHT_THUMBSTICK<br>00256 : LEFT_SHOULDER (LB)<br>00512 : RIGHT_SHOULDER (RB)<br>01024 : XBOX_GUIDE<br>04096 : BUTTON_A<br>08192 : BUTTON_B<br>16384 : BUTTON_X<br>32768 : BUTTON_Y"],"Name":"GetPressedButtons","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:XPos"}],"Description":["Returns a value ranging from -1.00 to 1.00 for the x-axis position of the left joystick."],"Name":"GetLeftStickX","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:YPos"}],"Description":["Returns a value ranging from -1.00 to 1.00 for the y-axis position of the left joystick."],"Name":"GetLeftStickY","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:XPos"}],"Description":["Returns a value ranging from -1.00 to 1.00 for the x-axis position of the right joystick."],"Name":"GetRightStickX","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:YPos"}],"Description":["Returns a value ranging from -1.00 to 1.00 for the y-axis position of the right joystick."],"Name":"GetRightStickY","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:DeadZone"}],"Description":["Returns the x-axis deadzone configured for the joysticks."],"Name":"GetDeadZoneX","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:DeadZone"}],"Description":["Returns the y-axis deadzone configured for the joysticks."],"Name":"GetDeadZoneY","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"float:DeadZone"}],"Description":["Specifies the x-axis deadzone used by the joysticks."],"Name":"SetDeadZoneX","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"float:DeadZone"}],"Description":["Specifies the y-axis deadzone used by the joysticks."],"Name":"SetDeadZoneY","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:TriggerValue"}],"Description":["Returns a value ranging from 0.00 to 1.00 for how far the left trigger is depressed."],"Name":"GetLeftTrigger","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[],"ReturnType":[{"type":"float:TriggerValue"}],"Description":["Returns a value ranging from 0.00 to 1.00 for how far the right trigger is depressed."],"Name":"GetRightTrigger","Alias":"","Version":"","Convention":"B","Tags":["Lutana","Controller","Input"],"FromPlugin":"Lutana NVSE"},{"Parameters":[{"type":"string:INIKeyPath"}],"ReturnType":[{"type":"float:INIValue"}],"Description":["Returns a float value for the key in the Path string.","The Path string contains the INI name, the App name, and the Key name. The format is \"iniName/appName/keyName\" with the separators being : / or \\ characters. The INI name corresponds to a file in \\Data\\Config\\ and does not include the \".ini\" suffix.","Returns default value of 0 if the Path string is erroneous, if the INI file does not exist, or if the App and/or Key do not exist in the file","The activity of MCM's INI functions is logged in the mcm.log file, located in the game's main directory, if you need to see what is being passed through the plugin."],"Examples":[{"Example":["GetModINI \"ExampleMenu/Variables/Variable1\""]}],"Name":"GetModINISetting","Alias":"GetModINI","Version":"1.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"string:INIKeyPath"},{"type":"float:INIValue"}],"Description":["Sets a new value to the key in the Path string.","The Path string contains the INI name, the App name, and the Key name. The format is \"iniName/appName/keyName\" with the separators being : / or \\ characters. The INI name corresponds to a file in \\Data\\Config\\ and does not include the \".ini\" suffix.","An INI file will be created by this function if one matching the INI name does not exist. An App and/or Key will also be created if not found in the INI file.","The activity of MCM's INI functions is logged in the mcm.log file, located in the game's main directory, if you need to see what is being passed through the plugin."],"Examples":[{"Example":["SetModINI \"ExampleMenu/Variables/Variable1\" 2"]}],"Name":"SetModINISetting","Alias":"SetModINI","Version":"1.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Grandchild"},{"type":"string:Setting"}],"ReturnType":[{"type":"integer:Value"}],"Description":["Returns a UI float value for a Setting in the MCM menu hierarchy.","This function is intended to be used internally by MCM and serves to shorten 'GetUIFloat \"StartMenu/MCM/*:Child/*:Grandchild/Setting\"'"],"Examples":[{"Example":["GetMCMFloat 0 0 \"_ActiveMod\""]}],"Name":"GetMCMFloat","Alias":"","Version":"1.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Grandchild"},{"type":"string:Setting"},{"type":"integer:Value"}],"Description":["Sets the UI float value for a Setting in the MCM menu hierarchy.","This function is intended to be used internally by MCM and serves to shorten 'SetUIFloat \"StartMenu/MCM/*:Child/*:Grandchild/Setting\" Value'"],"Examples":[{"Example":["SetMCMFloat 1 1 \"_enable\" 1"]}],"Name":"SetMCMFloat","Alias":"","Version":"1.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Grandchild"},{"type":"string:Setting"},{"url":"FormatSpecifiers","type":"format string:Value"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"}],"Description":["Sets the UI string value for a Setting in the MCM menu hierarchy.","This function is intended to be used internally by MCM and serves to shorten 'SetUIString \"StartMenu/MCM/*:Child/*:Grandchild/Setting\" Value'"],"Examples":[{"Example":["SetMCMString 1 1 \"_title\" \"Options\""]}],"Name":"SetMCMString","Alias":"","Version":"1.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Min"},{"type":"integer:Max"},{"type":"string:Setting"},{"type":"integer:Value"}],"Description":["Sets the UI float value for a Setting belonging to multiple grandchildren in the MCM menu hierarchy.","This function is intended to be used internally by MCM and is similar to SetMCMFloat, except it iterates through Grandchild values ranging from Min to Max."],"Examples":[{"Example":["SetMCMFloatMass 1 1 36 \"_enable\" 0"]}],"Name":"SetMCMFloatMass","Alias":"","Version":"2.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Min"},{"type":"integer:Max"},{"type":"string:Setting"},{"url":"FormatSpecifiers","type":"format string:Value"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"}],"Description":["Sets the UI string value for a Setting belonging to multiple grandchildren in the MCM menu hierarchy.","This function is intended to be used internally by MCM and is similar to SetMCMString, except it iterates through Grandchild values ranging from Min to Max."],"Examples":[{"Example":["SetMCMStringMass 1 1 36 \"_title\" \"%e\""]}],"Name":"SetMCMStringMass","Alias":"","Version":"2.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"integer:Child"},{"type":"integer:Grandchild"},{"type":"string:Setting"}],"ReturnType":[{"type":"string:String"}],"Description":["Returns a UI string value for a Setting in the MCM menu hierarchy.","This function is intended to be used internally by MCM and serves to act as 'GetUIString \"StartMenu/MCM/*:Child/*:Grandchild/Setting\"'"],"Examples":[{"Example":["GetMCMString 1 1 \"_title\""]}],"Name":"GetMCMString","Alias":"","Version":"2.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"string:INIKeyPath"}],"ReturnType":[{"type":"string:Value"}],"Description":["Returns a string value for the key in the Path string.","The Path string contains the INI name, the App name, and the Key name. The format is \"iniName/appName/keyName\" with the separators being : / or \\ characters. The INI name corresponds to a file in \\Data\\Config\\ and does not include the \".ini\" suffix.","Returns an empty string if the Path string is erroneous, if the INI file does not exist, or if the App and/or Key do not exist in the file","The activity of MCM's INI functions is logged in the mcm.log file, located in the game's main directory, if you need to see what is being passed through the plugin."],"Examples":[{"Example":["GetModINIString \"ExampleMenu/Variables/Variable1\""]}],"Name":"GetModINIStringSetting","Alias":"GetModINIString","Version":"2.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[{"type":"string:INIKeyPath"},{"type":"string:INIValue"}],"Description":["Sets a new string value to the key in the Path string.","The Path string contains the INI name, the App name, and the Key name. The format is \"iniName/appName/keyName\" with the separators being : / or \\ characters. The INI name corresponds to a file in \\Data\\Config\\ and does not include the \".ini\" suffix.","An INI file will be created by this function if one matching the INI name does not exist. An App and/or Key will also be created if not found in the INI file.","The activity of MCM's INI functions is logged in the mcm.log file, located in the game's main directory, if you need to see what is being passed through the plugin."],"Examples":[{"Example":["SetModINIString \"ExampleMenu/Variables/Variable1\" \"Value\""]}],"Name":"SetModINIStringSetting","Alias":"SetModINIString","Version":"2.0","Condition":" No","Convention":"B","Tags":["MCM"],"FromPlugin":"MCM"},{"Parameters":[],"ReturnType":[{"type":"Version:Integer"}],"Description":["Returns an integer representing the version (release #), starting from 1."],"Name":"NX_GetVersion","Alias":"","Version":"1","Condition":" No","Convention":"","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"string:String"},{"type":"actor:Reference","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Given a skeleton name fragment and an actor reference (player, NPC, or creature), returns the 1 if the actor is using a skeleton in that directory, 0 otherwise. The directory fragment must match the subdirectory under meshes, and is not case sensitive."],"Examples":[{"Example":["player.NX_IsUsingSkeleton \"_male\" ; will return 1","player.NX_IsUsingSkeleton \"nvgecko\" ; will return 0","RexREF.NX_IsUsingSkeleton \"_male\" ; will return 0","RexREF.NX_IsUsingSkeleton \"dog\" ; will return 1"]}],"Name":"NX_IsUsingSkeleton","Alias":"","Version":"","Condition":" No","Convention":"E","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"formlist:FormList"},{"type":"form:AnyForm"},{"type":"recurse:Integer","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Given a formlist and an item (base object, reference, or dynamic reference), will return 0 if the item is not in the list at all, or a value greater than 0 indicating how the object was found. The recurse flag is an optional integer that should be 1 or 0. It is currently not implemented. In the future, it will search formlists contained within formlists.","\t0 : item not in list.\n\t1 : item in list exactly.\n\t2 : base form of item in list.\n\t3 : item is a baseform of another item in list.\n\t4 : base form of item is the same as base form of another item in list."],"Examples":[{"Example":["; Take the following three vars:","set itemA to AcousticGuitar","set itemB to player.placeatme AcousticGuitar 1","RexREF.NX_IsUsingSkeleton \"_male\" ; will return 0","set itemC to player.placeatme AcousticGuitar 1","; And two formlists. List1 contains itemA, list2 contains itemB","\"NX_IsInList List1 itemA\" and \"NX_IsInList List2 itemB\" will both return 1.","\"NX_IsInList List1 itemB\" will return 2.","\"NX_IsInList List2 itemA\" will return 3.","\"NX_IsInList List2 itemC\" will return 4."]}],"Name":"NX_IsInList","Alias":"","Version":"1","Condition":" No","Convention":"B","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String"},{"type":"val:Float"},{"type":"persist:Integer","optional":"true"}],"Description":["Stores a floating point value with a reference. 'key' is the name for the value used in the SET and GET functions. 511 character maximum.","NOTE: The persist flag, as yet, does nothing. These values are saved with savegames will persist across game sessions.","NOTE: The keys are NOT shared between types. You can safely store a float and a form both under the key 'my key' and they will not overwrite one another. Internally they are stored in entirely separate arrays (maps actually), one per \"type.\""],"Examples":[{"Example":["playerREF.NX_SetEVFl \"test value\" 3.1415 0","; Will create the variable 'test value', associated with the player, and set it equal to 3.1514. This is basically the same thing as an associative array in perl, php, java (via an object), etc. As yet, there is no key iterator."]}],"Name":"NX_SetEVFl","Alias":"","Version":"3","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String"}],"ReturnType":[{"type":"val:Float"}],"Description":["Retrieves a floating point value set via the above syntax. Will return 0 if the value has never been set.","NOTE: The persist flag, as yet, does nothing. These values are saved with savegames will persist across game sessions.","NOTE: The keys are NOT shared between types. You can safely store a float and a form both under the key 'my key' and they will not overwrite one another. Internally they are stored in entirely separate arrays (maps actually), one per \"type.\""],"Name":"NX_GetEVFl","Alias":"GetEVFl","Version":"3","Condition":" Yes","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String"},{"type":"val:AnyForm"},{"type":"persist:Integer","optional":"true"}],"Description":["See NX_SetEVFl. This is the same, but stores a form instead (reference, base, or dynamic).","NOTE: The persist flag, as yet, does nothing. These values are saved with savegames will persist across game sessions.","NOTE: The keys are NOT shared between types. You can safely store a float and a form both under the key 'my key' and they will not overwrite one another. Internally they are stored in entirely separate arrays (maps actually), one per \"type.\""],"Name":"NX_SetEVFo","Alias":"","Version":"3","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String"}],"ReturnType":[{"type":"AnyForm"}],"Description":["See NX_GetEVFl. This is the same but retrieves a form.","NOTE: The persist flag, as yet, does nothing. These values are saved with savegames will persist across game sessions.","NOTE: The keys are NOT shared between types. You can safely store a float and a form both under the key 'my key' and they will not overwrite one another. Internally they are stored in entirely separate arrays (maps actually), one per \"type.\""],"Name":"NX_GetEVFo","Alias":"","Version":"3","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[],"ReturnType":[{"type":"actor:Ref"}],"Description":["Returns the current conversation partner if in a conversation AND the NPC initiated the conversation via StartConversation topic. Only makes sense when called on the player. Only works in MENUMODE blocks, as that is where conversations happen. To use in gamemode scripts, just create a menumode block that calls it fairly often and stores the result in a quest var that you can use in GAMEMODE blocks."],"Examples":[{"Example":["someref.startconversation sometopic; wait a bit, and be in a menumode blockref = player.NX_GetConversationPartner; ref now == someref"]}],"Name":"NX_GetConversationPartner","Alias":"","Version":"7","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String","optional":"true"},{"type":"match:Integer","optional":"true"}],"Description":["Clears an EV entry or the whole array.","Match is optional. If set to 2, clears all keys starting with the one you specify, e.g. \"mymod\" will clear all keys starting with the string \"mymod\"."],"Name":"NX_ClrEVFl","Alias":"","Version":"9","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"key:String","optional":"true"},{"type":"match:Integer","optional":"true"}],"Description":["Clears an EV entry or the whole array."],"Name":"NX_ClrEVFo","Alias":"","Version":"9","Condition":" No","Convention":"R","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"quest:Quest"},{"type":"variable:Integer","optional":"true"}],"Description":["Gets an extended actor float value named in a stringVar quest variable."],"Name":"NX_GetQVEVFl","Alias":"GetQVEVFl","Version":"","Condition":" Yes","Convention":"","Tags":["Extender"],"FromPlugin":"NVSE Extender"},{"Parameters":[{"type":"item:ObjectID","optional":"true"}],"Description":["Returns explosion of projectile."],"Name":"PN_GetProjectileExplosion","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"item:ObjectID","optional":"true"}],"Description":["Returns damage of explosion."],"Name":"PN_GetExplosionDamage","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"item:ObjectID","optional":"true"}],"Description":["Returns force of explosion."],"Name":"PN_GetExplosionForce","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"float:Float"},{"type":"item:ObjectID","optional":"true"}],"Description":["Sets damage of explosion."],"Name":"PN_SetExplosionDamage","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"float:Float"},{"type":"item:ObjectID","optional":"true"}],"Description":["Sets force of explosion."],"Name":"PN_SetExplosionForce","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"form list:FormList"}],"Description":["Deletes all elements in the list."],"Name":"PN_ListClear","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"actor base:ActorBase","optional":"true"}],"Description":["Fixed function."],"Name":"PN_GetActorBaseFlagsLow","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"float:Float"}],"Description":["Set the condition damage penalty."],"Name":"PN_SetConditionDamagePenalty","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[],"Description":["Get the condition damage penalty."],"Name":"PN_GetConditionDamagePenalty","Alias":"","Version":"","Condition":" No","Convention":"","Tags":["Project Nevada","PN"],"FromPlugin":"PN"},{"Parameters":[{"type":"actor reference:Actor","optional":"true"}],"Description":["Get the NPC talked to."],"Name":"GetDialogueTarget","Alias":"GDT","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"actor reference:Actor","optional":"true"}],"Description":["Get the NPC who started the conversation."],"Name":"GetDialogueSubject","Alias":"GDS","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"actor reference:Actor","optional":"true"}],"Description":["Get the NPC who is currently speaking in the conversation."],"Name":"GetDialogueSpeaker","Alias":"GDK","Version":"3.1","Condition":"Yes","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"ref:ObjectRef","optional":"true"}],"Description":["Gets the current package from an actor."],"Name":"GetCurrentPackage","Alias":"","Version":"3.3","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Sets package start location as a reference."],"Name":"SetPackageLocationReference","Alias":"","Version":"3.1","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"}],"Description":["Gets package start location."],"Name":"GetPackageLocation","Alias":"GetPackageLocationReference","Version":"3.3","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"},{"type":"float:Float"}],"Description":["Sets package start location radius."],"Name":"SetPackageLocationRadius","Alias":"","Version":"3.5","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"}],"ReturnType":[{"type":"int:Radius"}],"Description":["Gets package start location radius."],"Name":"GetPackageLocationRadius","Alias":"","Version":"3.5","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Sets package target as a reference."],"Name":"SetPackageTargetReference","Alias":"","Version":"3.5","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"},{"type":"int:Integer"}],"Description":["Sets package target count or distance."],"Name":"SetPackageTargetCount","Alias":"SetPackageTargetDistance","Version":"3.5","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"form:AnyForm"}],"Description":["Gets package target count or distance."],"Name":"GetPackageTargetCount","Alias":"GetPackageTargetDistance","Version":"3.5","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"ref:ObjectRef","optional":"true"}],"Description":["Gets the count of packages from an actor base form."],"Name":"GetPackageCount","Alias":"","Version":"3.3","Condition":"Yes","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"index:Integer"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Gets the Nth package from an actor base form."],"Name":"GetNthPackage","Alias":"","Version":"3.3","Convention":"B","Tags":["Actor","AI"]},{"Parameters":[{"type":"package:AnyForm"},{"type":"index:Integer"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Sets and returns the Nth package to an actor base form."],"Name":"SetNthPackage","Alias":"","Version":"3.3","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"package:AnyForm"},{"type":"index:Integer"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Adds the Nth package to an actor base form."],"Name":"AddPackageAt","Alias":"","Version":"3.3","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"index:Integer"},{"type":"ref:ObjectRef","optional":"true"}],"Description":["Removes and returns the Nth package from an actor base form."],"Name":"RemovePackageAt","Alias":"","Version":"3.3","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"ref:ObjectRef","optional":"true"}],"Description":["Removes all packages from an actor base form returns count removed."],"Name":"RemoveAllPackages","Alias":"","Version":"3.3","Convention":"E","Tags":["Actor","AI"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"bool:IsScripted"}],"Description":["Returns 1 if the object or reference has a script attached to it."],"Name":"IsScripted","Alias":"","Version":"1.3","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:ScriptID"}],"Description":["Returns the script of the reference or passed object."],"Name":"GetScript","Alias":"","Version":"1.3","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:OldScript"}],"Description":["Removes the script of the reference or passed object."],"Name":"RemoveScript","Alias":"","Version":"1.3","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"ref:ScriptID"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"ref:OldScript"}],"Description":["Sets the specified script onto the calling object and Returns any previous script. Note that Oblivion doesn't have a script variable type so you must assign the script to a ref variable for this to work.","NOTE: If the specified object already has a script attached to it, after changing the script the stored values of local variables for references to that object will not match the variables in the new script. If called on a reference, the variable list for the calling reference will be updated to match the new script, but other references to the same base object will not be updated.","Summary: SetScript is safe to use with quests, with previously unscripted objects, and on unique references (for which no other references exist to the same base object). Using the command on base objects for which non-unique references exist may result in undefined behavior."],"Name":"SetScript","Alias":"","Version":"1.3","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"bool:Valid"}],"Description":["Returns 1 if the object passed in the ref variable is valid. Returns 0 if the object stored in the variable is not currently loaded in memory (for instance, a non-persistent reference) or if the variable doesn't hold any object."],"Name":"IsFormValid","Alias":"","Version":"1.3","Convention":"E","Tags":[]},{"Parameters":[{"type":"ref:ObjectRef"}],"ReturnType":[{"type":"bool:IsReference"}],"Description":["Returns 1 if the specified ref variable contains a reference, as opposed to a base object."],"Name":"IsReference","Alias":"","Version":"1.3","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:QuestID","optional":"true"}],"ReturnType":[{"type":"float:VariableValue"}],"Description":["Looks up the value of a variable by name."],"Name":"GetVariable","Alias":"","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:QuestID","optional":"true"}],"ReturnType":[{"type":"bool:HasVariable"}],"Description":["Returns true if the script has a variable with the specified name."],"Name":"HasVariable","Alias":"","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:QuestID","optional":"true"}],"ReturnType":[{"type":"ref:VariableValue"}],"Description":["Looks up the value of a ref variable by name."],"Name":"GetRefVariable","Alias":"","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:QuestID","optional":"true"}],"ReturnType":[{"type":"array_var:ArrayVariableValue"}],"Description":["Looks up an array variable by name on the calling object or specified quest."],"Name":"GetArrayVariable","Alias":"GetArrayVar","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"string:VariableName"},{"type":"float:NewValue"},{"type":"ref:QuestID","optional":"true"}],"Description":["Sets the value of a variable by name."],"Name":"SetVariable","Alias":"","Version":"4.5","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"string:VariableName"},{"type":"ref:NewValue"},{"type":"ref:QuestID","optional":"true"}],"Description":["Sets the value of a variable by name."],"Name":"SetRefVariable","Alias":"","Version":"4.5","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"formID:Script"},{"type":"formID:Script"}],"ReturnType":[{"type":"bool:Identical"}],"Description":["Returns true if the compiled scripts are identical."],"Name":"CompareScripts","Alias":"","Version":"4.1","Convention":"","Tags":["Script"]},{"Parameters":[],"Description":["Sets all variables in a script to zero."],"Name":"ResetAllVariables","Alias":"","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"formID:Script","optional":"true"}],"Description":["Returns the number of literal references in a script."],"Name":"GetNumExplicitRefs","Alias":"","Version":"4.1","Convention":"E","Tags":["Script"]},{"Parameters":[{"type":"int:Index"},{"type":"formID:Script","optional":"true"}],"ReturnType":[{"type":"ref:Object"}],"Description":["Returns the nth literal reference in a script."],"Name":"GetNthExplicitRef","Alias":"","Version":"4.1","Convention":"B","Tags":["Script"]},{"Parameters":[],"ReturnType":[{"type":"formID:Script"}],"Description":["Returns the script which is currently executing."],"Name":"GetCurrentScript","Alias":"","Version":"4.1","Convention":"B","Tags":["Script"]},{"Parameters":[],"ReturnType":[{"type":"formID:Script"}],"Description":["Returns the script that called the executing function script."],"Name":"GetCallingScript","Alias":"","Version":"4.1","Convention":"B","Tags":["Script"]},{"Parameters":[{"type":"labelID:Integer","optional":"true"}],"Description":["Defines a labeled position in a script which subsequent calls to Goto can use to create loops. The label must be defined before Goto is called."],"Name":"Label","Alias":"","Version":"1.1","Convention":"B","Tags":["Script"]},{"Parameters":[{"type":"labelID:Integer","optional":"true"}],"Description":["Jump to a labeled position in the script previously defined by a call to Label. Execution will return to the label, simulating a loop. Be careful to provide an exit condition to avoid creating infinite loops."],"Name":"Goto","Alias":"","Version":"1.1","Convention":"B","Tags":["Script"]},{"Parameters":[{"type":"expression"},{"type":":="},{"type":"expression"}],"Description":["The Let statement is NVSE's version of Fallout's <code>Set</code> statement. It takes the form <code>let <span class=\"op\">expr1</span> := <span class=\"op\">expr2</span></code> where <span class=\"op\">expr1</span> evaluates to something which can hold a value, such as a variable or array element, and <span class=\"op\">expr2</span> is an expression of a type which can be stored in <span class=\"op\">expr1</span>. Values within expressions can include arithmetic expressions, function calls, etc. The assignment operator checks the types of its operands, so it will allow assigning a number to a <code>short</code> variable but not to a <code>string_var</code>."],"Examples":[{"Example":["string_var str","array_var arr","short num","let str := \"a string\"","let str := str[0:num] + player.GetName + \" some more text\"","let arr := ar_Construct Map","let arr[(num + player.GetPos Z) / player.GetPos X] := player.GetDistance someRef ^ 2"]}],"Name":"Let","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"boolean expression"}],"ReturnType":[{"type":"Bool"}],"Description":["Used within if statements to test the value of an expression. This allows OBSE expressions to be used as conditions. The expression must evaluate to a boolean value."],"Examples":[{"Example":["if eval (array[0] &gt; 1)","\t; code executes if array[0] &gt; 1","endif"]}],"Name":"eval","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"boolean expression:<unknown>"}],"Description":["Evaluates an NVSE expression. If the expression is true, the statements following it will be executed until the next Loop command, at which point control returns to the top of the loop and the expression is evaluated again."],"Name":"While","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"int:Integer","optional":"true"}],"Description":["Returns execution to the most recent While or ForEach command. The loop condition is evaluated and if it passes, execution continues inside the body of the loop. Otherwise, execution returns to the instruction immediately following the Loop command."],"Name":"loop","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"iterator:Multi"}],"Description":["<code>ForEach</code> is used to iterate over the elements of an array, the characters in a string, or references to objects in a container. The syntax <code>ForEach item &lt;- collection</code> is used to indicate the variable (\"<code>item</code>\") which will hold the current element and the string, array, or container reference (\"<code>collection</code>\") from which elements will be drawn. On loop entry, <code>item</code> is set to the first element in <code>collection</code>. When the next <code>Loop</code> command is encountered, <code>item</code> is set to the next element in <code>collection</code> and execution returns to the top of the loop. The loop terminates when all elements have been returned. The type of <code>item</code> varies based on the type of <code>collection</code>.","For arrays, <code>item</code> is an array_var, specifically a StringMap. The loop will initialize <code>item</code> with two elements: \"key\", which holds the key of the current element, and \"value\", which holds the value associated with that key. Within a <code>ForEach</code> loop you can access both fields via <code>item[\"key\"]</code> and <code>item[\"value\"]</code>. Once the loop terminates, <code>item</code> is reset to an uninitialized array."],"Name":"ForEach","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"int:Integer","optional":"true"}],"Description":["Must be called inside of a ForEach or While loop. Continue skips the rest of the body of a loop, returning execution to the top of the loop and evaluating the loop condition. If the condition passes, execution enters the loop body, otherwise the loop terminates and continues from the instruction following the corresponding Loop command."],"Name":"Continue","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"int:Integer","optional":"true"}],"Description":["Must be called inside of a ForEach or While loop. Break causes the loop to exit immediately, forcing execution to jump to the instruction immediately following the next Loop command."],"Name":"Break","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"expression"}],"ReturnType":[{"type":"String"}],"Description":["Attempts to convert an expression to a string. For numeric expressions, the result is a string representation of the numeric value. For objects, it is the name of the object if available; otherwise it is the formID expressed in hexadecimal notation. For string expressions no conversion is necessary."],"Examples":[{"Example":["let aStringVar := ToString (aNumber + 1)"]}],"Name":"ToString","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"string:expr"}],"Description":["Prints a string expression to the console. This is mainly a convenience function to eliminate the need for temporary string variables when printing complex strings using PrintToConsole, as it supports string concatenation, the ToString function, etc."],"Name":"Print","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[{"type":"expression:String"}],"ReturnType":[{"type":"Bool"}],"Description":["Attempts to evaluate an expression, returning false if an error occurs during evaluation and true otherwise. This can be useful when checking if an array index is out of bounds or if an element exists with a given key, among other things. TestExpr suppresses the output of error messages to the console and log file."],"Examples":[{"Example":["array_var array","let array := ar_Construct Array","if testexpr (array[5] := 2)","\tPrintC \"5 is a valid index, assignment succeeded.\"","else","\tPrintC \"Index 5 is out of bounds, no assignment.\"","endif","let array := ar_Construct StringMap","if testexpr (array[\"INDEX\"])","\tPrintC \"An element exists in array with key 'INDEX'\"","else","\tPrintC \"No element with the specified key exists.\"","endif"]}],"Name":"TestExpr","Alias":"","Version":"4.1","Convention":"","Tags":["Expression"]},{"Parameters":[{"type":"expression"}],"ReturnType":[{"type":"string:Type"}],"Description":["Returns a string representing the type of an expression. This is mainly useful for determining the type of an array element at run-time. Possible return values: \"String\", \"Number\", \"Form\", \"Array\", \"StringMap\", \"Map\"."],"Name":"TypeOf","Alias":"","Version":"4.1","Convention":"","Tags":["Expression"]},{"Parameters":[{"type":"int:Integer","optional":"true"}],"Description":["A blocktype which precedes the body of a function. This blocktype is only valid within function scripts. A parameter list consisting of up to ten local variables used to hold arguments passed to the function must follow this keyword enclosed in curly braces; if the function takes no arguments the braces should be empty. See <a href=\"#User_Defined_Functions\">User-Defined Functions</a> for more information."],"Examples":[{"Example":["Begin Function {arg1, arg2, ... arg10}","\t; function body","End"]}],"Name":"Function","Alias":"","Version":"4.1","Convention":"B","Tags":["Function"]},{"Parameters":[{"type":"formID:Script"},{"type":"multi:Arg1","optional":"true"},{"type":"multi:Arg2","optional":"true"},{"type":"multi:Arg3","optional":"true"},{"type":"multi:Arg4","optional":"true"},{"type":"multi:Arg5","optional":"true"},{"type":"multi:Arg6","optional":"true"},{"type":"multi:Arg7","optional":"true"},{"type":"multi:Arg8","optional":"true"},{"type":"multi:Arg9","optional":"true"},{"type":"multi:Arg10","optional":"true"},{"type":"multi:Arg11","optional":"true"},{"type":"multi:Arg12","optional":"true"},{"type":"multi:Arg13","optional":"true"},{"type":"multi:Arg14","optional":"true"},{"type":"multi:Arg15","optional":"true"}],"ReturnType":[{"type":"multi:ReturnValue"}],"Description":["Calls a user-defined function. Should be followed by a list of arguments matching the types expected by the function. If a calling reference is specified, commands within the function body will operate on that reference. Call returns whatever value is returned by the function."],"Name":"Call","Alias":"","Version":"4.1","Convention":"E","Tags":["Function"]},{"Parameters":[{"type":"returnValue:expr"}],"Description":["Specifies the value to be returned from a function. Valid only within a Function block. If a function does not specify a return value, the return value is assumed to be numeric zero. If multiple calls to SetFunctionValue are processed within a single Function block, the most recent value specified will be returned."],"Name":"SetFunctionValue","Alias":"","Version":"4.1","Convention":"B","Tags":["Function"]},{"Parameters":[],"ReturnType":[{"type":"stringMap:UserTime"}],"Description":["Returns a StringMap containing information about the time and date on the player's system.","The returned StringMap has the following key/value pairs, all of which are integers:","\n\tYear (1601 - 30827)","\n\tMonth (1-12)","\n\tDayOfWeek (1:Sunday - 7:Saturday)","\n\tDay (1-31)","\n\tHour (0-23)","\n\tMinute (0-59)","\n\tSecond (0-59)","\n\tMillisecond (0-999)"],"Name":"GetUserTime","Alias":"","Version":"4.1","Convention":"B","Tags":["Expression"]},{"Parameters":[],"ReturnType":[{"type":"stringMap:Data"}],"Description":["Returns a StringMap consisting of all of the name-value entries for the mod local data associated with the mod to which the calling script belongs. This is a copy of the local data so modifying the array contents will not modify the stored data."],"Name":"GetAllModLocalData","Alias":"","Version":"4.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:Key"}],"ReturnType":[{"type":"multi:Data"}],"Description":["Gets the data value associated with the specified key for the mod to which the calling script belongs. If no data exists for the key, returns 0."],"Name":"GetModLocalData","Alias":"","Version":"4.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:Key"},{"type":"multi:Data"}],"ReturnType":[{"type":"bool:Success"}],"Description":["Sets the data value associated with the specified key for the mod to which the calling script belongs. The key must be a string; the data can be a string, number, or object. Keys are case-insensitive and unique - only one data value can be associated with a particular key."],"Name":"SetModLocalData","Alias":"","Version":"4.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:Key"}],"ReturnType":[{"type":"bool:Exists"}],"Description":["Returns true if mod local data exists for the specified key."],"Name":"ModLocalDataExists","Alias":"","Version":"4.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"string:Key"}],"ReturnType":[{"type":"bool:Removed"}],"Description":["Removes the specified entry from the mod's local data."],"Name":"RemoveModLocalData","Alias":"","Version":"4.1","Convention":"B","Tags":[]},{"Parameters":[{"type":"var1:string_var"},{"type":"var2:string_var","optional":"true"},{"type":"var3:string_var","optional":"true"},{"type":"var4:string_var","optional":"true"},{"type":"var5:string_var","optional":"true"},{"type":"var6:string_var","optional":"true"},{"type":"var7:string_var","optional":"true"},{"type":"var8:string_var","optional":"true"},{"type":"var9:string_var","optional":"true"},{"type":"var10:string_var","optional":"true"}],"Description":["Destroys a string variable, setting its value to zero and preventing its contents from being saved in the savegame."],"Name":"sv_Destruct","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"}],"ReturnType":[{"type":"newString:string_var"}],"Description":["Returns a new string_var whose value is the passed format string."],"Examples":[{"Example":["Copying a string:","set string2 to sv_construct \"%z\" string1"]},{"Example":["Concatenating two strings:","set string2 to sv_construct \"%z%z\" string1 string2"]}],"Name":"sv_Construct","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"string_var","optional":"true"}],"Description":["Sets the contents of a string variable.","This function is of limited use, as the same thing can be achieved by simply 'let'ing a string literal to a string variable."],"Name":"sv_Set","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"string_var"},{"type":"bool:CaseSensitive","optional":"true"}],"ReturnType":[{"type":"int:Comparison"}],"Description":["Compares a string to a formatted string. Performs a case-insensitive comparison by default. Returns 0 if the strings are equal, 1 if the string variable occurs alphabetically before the formatted string, -1 if the string variable occurs alphabetically after the formatted string, or -2 if the comparison fails."],"Name":"sv_Compare","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var"}],"ReturnType":[{"type":"int:length"}],"Description":["Returns the number of characters in a string variable."],"Name":"sv_Length","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var"},{"type":"int:StartPos","optional":"true"},{"type":"int:HowMany","optional":"true"}],"Description":["Erases the specified number of characters from a string starting at the specified position. If omitted, startPos = 0. Omitting numToErase erases all characters from startPos to the end of the string."],"Name":"sv_Erase","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:string_var"},{"type":"int:startPos","optional":"true"},{"type":"int:howMany","optional":"true"}],"Description":["Returns a substring of a string variable.","Deprecated. Use slice notation instead: <code>let substr := str[a:b]</code>"],"Name":"sv_SubString","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var"}],"ReturnType":[{"type":"Float"}],"Description":["Attempts to convert the contents of a string variable to a number. Valid characters include digits, a leading sign, and an e to indicate scientific notation. Conversion halts at the first invalid character."],"Name":"sv_ToNumeric","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"string_var"},{"type":"bool:CaseSensitive","optional":"true"}],"Description":["Inserts a substring into a string at the specified position, provided the position is less than the length of the string, or prepends it if no position is specified."],"Name":"sv_Insert","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"string_var:Source"},{"type":"int:StartPos","optional":"true"},{"type":"int:EndPos","optional":"true"},{"type":"bool:CaseSensitive","optional":"true"}],"ReturnType":[{"type":"int:Count"}],"Description":["Returns the number of occurrences of a substring within a string variable, using the same arguments as sv_Find."],"Name":"sv_Count","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"string:FormatString"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"float:Variable","optional":"true"},{"type":"string_var:Source"},{"type":"int:StartPos","optional":"true"},{"type":"int:EndPos","optional":"true"},{"type":"bool:CaseSensitive","optional":"true"}],"ReturnType":[{"type":"int:Index"}],"Description":["Returns the index of the first occurrence of a substring within a string variable, starting at the specified position and only including occurrences contained completely within the range [startPos, startPos + searchLen].","Returns -1 if the substring is not found in the string variable.","Omit the arguments to search the entire string without regard to case."],"Name":"sv_Find","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"FormatSpecifiers","type":"subString:formatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"int:string_var"},{"type":"int:startPos","optional":"true"},{"type":"int:endPos","optional":"true"},{"type":"int:bCaseSensitive","optional":"true"},{"type":"int:howMany","optional":"true"}],"ReturnType":[{"type":"int:NumReplaced"}],"Description":["Replaces occurrences of a string1 with string2 within a string variable. Both the text to replace and that with which to replace it are passed in a single format string separated by a pipe character as in \"toReplace.\""],"Name":"sv_Replace","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"bool:IsLetter"}],"Description":["Returns 1 if the character is an alphabetic character."],"Name":"IsLetter","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"bool:IsDigit"}],"Description":["Returns 1 if the character is a numeric character."],"Name":"IsDigit","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"bool:IsPrintable"}],"Description":["Returns 1 if the character is a printable character."],"Name":"IsPrintable","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"bool:IsPunctuation"}],"Description":["Returns 1 if the character is a punctuation character."],"Name":"IsPunctuation","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"bool:IsUpperCase"}],"Description":["Returns 1 if the character is an uppercase letter."],"Name":"IsUpperCase","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:int"},{"type":"int:int"}],"Description":["Returns the ASCII code of the character at the specified position in a string variable.","Deprecated. Use bracket notation: <code>let char := str[pos]</code>"],"Name":"sv_GetChar","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string:Character"}],"ReturnType":[{"type":"int:Character"}],"Description":["Converts a single character to its equivalent ASCII code."],"Name":"CharToAscii","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"int:UpperCharacter"}],"Description":["Converts a character to uppercase."],"Name":"ToUpper","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:Character"}],"ReturnType":[{"type":"int:LowerCharacter"}],"Description":["Converts a character to lowercase."],"Name":"ToLower","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"int:ModIndex"}],"ReturnType":[{"type":"string_var:Name"}],"Description":["Returns the name of the nth active mod."],"Name":"GetNthModName","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Name"}],"Description":["Returns the name of an object."],"Name":"GetName","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"type":"string:SettingName"}],"ReturnType":[{"type":"string_var:Setting"}],"Description":["Returns the value of a string game setting."],"Name":"GetStringGameSetting","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string:SettingGroup:SettingName"}],"ReturnType":[{"type":"string_var:Setting"}],"Description":["Returns the value of a string INI setting."],"Examples":[{"Example":["let s := GetStringIniSetting \"sDPad:LANGUAGE\""]}],"Name":"GetStringIniSetting","Alias":"","Version":"4.5","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"settingNameAndNewValue:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"}],"Description":["Sets the string value of a game setting. The new string value is contained within the format string, following the setting name and separated by a pipe character, i.e. \"nameOfGameSetting|newValueOfGameSetting\". When calling from the console, use '@' instead of the pipe character."],"Name":"SetStringGameSettingEX","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string:SettingGroup:SettingName"}],"Description":["Returns the value of a string INI setting."],"Examples":[{"Example":["SetStringIniSetting \"settingGroup|settingName\""]}],"Name":"SetStringIniSettings","Alias":"","Version":"4.5","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Returns the model path of an object."],"Examples":[{"Example":["let ModelName :=  objectRef.GetModelPath"]}],"Name":"GetModelPath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Returns the icon path of an object."],"Name":"GetIconPath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Biped_Path_Codes","type":"int:BipedPathCode"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Returns the file path of one of the models for the specified biped object."],"Name":"GetBipedModelPath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Biped_Path_Codes","type":"int:BipedPathCode"},{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Returns an icon path."],"Name":"GetBipedIconPath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"path:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets a simple model path."],"Name":"SetModelPathEX","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"path:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets a simple icon path."],"Name":"SetIconPathEX","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"path:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"url":"Biped_Path_Codes","type":"int:BipedPathCode"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets a biped icon path."],"Name":"SetBipedIconPathEX","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"string:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"url":"Biped_Path_Codes","type":"int:whichPath"},{"type":"item:ObjectID","optional":"true"}],"Description":["Sets a biped model path."],"Name":"SetBipedModelPathEX","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Returns the texture path of an object. This command is identical to GetIconPath, but also works for other object types such as skills, classes, and miscellaneous objects."],"Name":"GetTexturePath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"type":"string_var:Path"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Sets the texture path of an object. This command works for a broader set of objects than SetIconPathEX.."],"Name":"SetTexturePath","Alias":"","Version":"4.1","Convention":"E","Tags":["String"]},{"Parameters":[{"type":"ref:Faction"},{"type":"int:WhichRank"},{"type":"bool:Female","optional":"true"}],"ReturnType":[{"type":"string_var:RankName"}],"Description":["Returns the title of the nth rank in a faction. Optionally returns the female rank name."],"Name":"GetNthFactionRankName","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"Format_Specifiers","type":"path:FormatString"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"Variable","optional":"true"},{"type":"ref:Faction"},{"type":"int:WhichRank"},{"type":"bool:Female","optional":"true"}],"Description":["Sets the title of the nth rank in a faction. Optionally sets the female rank name."],"Name":"SetNthFactionRankNameEX","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"DirectX_Scancodes","type":"int:KeyCode"}],"ReturnType":[{"type":"string_var:KeyName"}],"Description":["Returns the name of a key given its DirectInput scan code."],"Name":"GetKeyName","Alias":"","Version":"4.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"int:ASCIICode"}],"ReturnType":[{"type":"string_var:Character"}],"Description":["Returns the character associated with an ASCII code as a string."],"Name":"AsciiToChar","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:Object","optional":"true"}],"ReturnType":[{"type":"string_var:FormID"}],"Description":["Returns the formID of the specified object as a hexadecimal string. If the object cannot be found in memory (for example, a non-persistent reference), returns \"00000000\"."],"Name":"GetFormIDString","Alias":"","Version":"4.1","Convention":"E","Tags":["String","Hex"]},{"Parameters":[{"type":"int:Number"},{"type":"int:Width","optional":"true"}],"ReturnType":[{"type":"string_var:HexValue"}],"Description":["Returns a string representation of an integer in hexadecimal format. An optional width parameter ranging from 0 to 8 specifies the minimum number of digits toinclude; unused digits are padded with zeroes. By default, 8 digits are included."],"Name":"NumToHex","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var:Expression"},{"type":"bool:IsHex","optional":"true"}],"ReturnType":[{"type":"float:Number"}],"Description":["Takes a string expression and attempts to convert it to a numeric value. By default the string is assumed to be in decimal notation containing digits, at most one decimal point, and an optional leading sign. If the string is prefixed with \"0x\" or the optional argument is non-zero, the string is interpreted in hexadecimal notation instead, with valid characters consisting of digits and the letters 'A' through 'F'. Returns 0 if the conversion fails."],"Name":"ToNumber","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var:ToSplit"},{"type":"int:Delimiters"}],"ReturnType":[{"type":"array_var:SubStrings"}],"Description":["Given a string and a set of delimiters, returns an Array containing all the substrings separated by one or more of the delimiting characters. For example, <span class=\"mono\">sv_Split \"#This is.a##. string.\" \".# \" returns { \"This\", \"is\", \"a\", \"string\" }</span>. The '.', '#', and space characters are removed."],"Name":"sv_Split","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[],"ReturnType":[{"type":"string_var:Directory"}],"Description":["Returns the path to the Fallout directory."],"Name":"GetFalloutDirectory","Alias":"GetFalloutDir","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var:Source"}],"ReturnType":[{"type":"string_var:Percentified"}],"Description":["Takes an input string and returns it with each '%' character replaced by two '%' characters. For instance, \"100% gold\" becomes \"100%% gold\" and \"99.99%%\" becomes \"99.99%%%%\". The argument can be any expression evaluating to a string value."],"Name":"sv_Percentify","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:Object","optional":"true"}],"ReturnType":[{"type":"string_var:FormID"}],"Description":["Returns the form ID stored in an array element or ref variable as a string regardless of whether or not the formID is valid."],"Name":"GetRawFormIDString","Alias":"GetFormIDString2","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var:Source"}],"ReturnType":[{"type":"string_var:LowerString"}],"Description":["Converts all characters in the string to lowercase."],"Name":"sv_ToLower","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"string_var:Source"}],"ReturnType":[{"type":"string_var:UpperString"}],"Description":["Converts all characters in the string to uppercase."],"Name":"sv_ToUpper","Alias":"","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"Actor_Value_Codes","type":"actorValue:ToConvert"}],"ReturnType":[{"url":"Actor_Value_Codes","type":"string_var:ActorValueName"}],"Description":["Returns the localized string corresponding to an actor value."],"Name":"ActorValueToString","Alias":"AVString","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"url":"Actor_Value_Codes","type":"actorValueCode:ToConvert"}],"ReturnType":[{"url":"Actor_Value_Codes","type":"string_var:ActorValueName"}],"Description":["Returns the localized string corresponding to an actor value code."],"Name":"ActorValueToStringC","Alias":"AVStringC","Version":"4.1","Convention":"B","Tags":["String"]},{"Parameters":[{"type":"ref:ObjectID","optional":"true"}],"ReturnType":[{"type":"string_var:Path"}],"Description":["Get the path to the scope model of a weapon."],"Name":"GetScopeModelPath","Alias":"","Version":"4.2.4","Convention":"E","Tags":["String","Weapon"]},{"Parameters":[{"type":"string:Path"},{"type":"ref:ObjectID","optional":"true"}],"Description":["Set the path to the scope model of a weapon."],"Name":"SetScopeModelPath","Alias":"","Version":"4.2.4","Convention":"E","Tags":["String","Weapon"]},{"Parameters":[{"type":"traitName:String"}],"ReturnType":[{"type":"Reference"}],"Description":["Looks up a UI trait by name and Returns its numeric value. The trait name is of the format \"MenuName/ElementName/ElementName/.../TraitName\"as defined in the XML hierarchy for the desired menu, i.e. \"MessageMenu\\NoGlow_Branch\\MM_Title\\x\"","The path argument as two new capabilities. A path segment of \"*\" matches any child tile, and a path segment suffix of \":N\" matches the N'th child tile.  This is useful when accessing list box items, where the tile names are either identical, or unpredictable, or both."],"Name":"GetUIFloat","Alias":"","Version":"1.2","Convention":"B","Tags":["Interface"]},{"Parameters":[{"type":"traitName:String"},{"type":"newValue:Float"}],"Description":["Sets the value of a float UI trait. Trait name is of the format used by GetUIFloat.","The path argument as two new capabilities. A path segment of \"*\" matches any child tile, and a path segment suffix of \":N\" matches the N'th child tile.  This is useful when accessing list box items, where the tile names are either identical, or unpredictable, or both."],"Name":"SetUIFloat","Alias":"","Version":"1.2","Convention":"B","Tags":["Interface"]},{"Parameters":[{"type":"traitName:String"},{"type":"newValue:String"}],"Description":["Sets the value of a string UI trait. Trait name is of the format used by GetUIFloat.","The path argument as two new capabilities. A path segment of \"*\" matches any child tile, and a path segment suffix of \":N\" matches the N'th child tile.  This is useful when accessing list box items, where the tile names are either identical, or unpredictable, or both."],"Name":"SetUIString","Alias":"","Version":"1.2","Convention":"B","Tags":["Interface"]},{"Parameters":[{"type":"traitName:String"},{"url":"FormatSpecifiers","type":"format string:String"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"},{"type":"variable:Float","optional":"true"}],"Description":["Sets the value of a string UI trait. Trait name is of the format used by GetUIFloat.","The path argument as two new capabilities. A path segment of \"*\" matches any child tile, and a path segment suffix of \":N\" matches the N'th child tile.  This is useful when accessing list box items, where the tile names are either identical, or unpredictable, or both."],"Name":"SetUIStringEx","Alias":"","Version":"2.2","Convention":"B","Tags":["Interface"]},{"Parameters":[{"type":"path:String"},{"type":"sortSpec:String"}],"Description":["Sorts a specified list box."],"Name":"SortUIListBox","Alias":"","Version":"1.9","Convention":"B","Tags":["Interface"]},{"Parameters":[],"Description":["Remove all targets and close VATS mode."],"Name":"EndVATSCam","Alias":"","Version":"4.5","Convention":"B","Tags":["Interface"]},{"Parameters":[{"type":"spell:SpellItem"},{"type":"item:InventoryObject","optional":"true"}],"Description":["Identical to AddSpell but without the UI message."],"Name":"AddSpellNS","Alias":"","Version":"1.1","Convention":"E","Tags":["Inventory"]},{"Parameters":[],"Description":["A debugging command which outputs all of the children of the UI component currently under the mouse cursor as well as the names and values of all of its traits. Output is sent to the console and to obse.log. Avoid using this function in released mods; it is intended for testing and debugging only."],"Name":"PrintActiveTile","Alias":"","Version":"1.1","Convention":"B","Tags":[]}]